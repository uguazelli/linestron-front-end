{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar LoginPage = function LoginPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userCredentials = _useState4[0],\n      setUserCredential = _useState4[1];\n\n  var _useState5 = useState({\n    loginFailed: false,\n    loginException: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showErrorMessage = _useState6[0],\n      setShowErrorMessage = _useState6[1];\n\n  var url = host + \"/auth/login\";\n  var headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  var body = JSON.stringify(userCredentials);\n\n  var login = function login() {\n    var response, json;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setShowErrorMessage({\n              loginFailed: false,\n              loginException: false\n            });\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"POST\",\n              credentials: \"include\",\n              headers: headers,\n              body: body\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            setAuthenticated(json);\n            if (json.email === undefined) setShowErrorMessage(_objectSpread(_objectSpread({}, showErrorMessage), {}, {\n              loginFailed: true\n            }));\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            setShowErrorMessage(_objectSpread(_objectSpread({}, showErrorMessage), {}, {\n              loginException: true\n            }));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        margin: 40,\n        color: \"white\"\n      },\n      children: \"Login Page\"\n    }), _jsx(Text, {\n      style: {\n        color: \"white\"\n      },\n      children: \"Email \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          email: v\n        }));\n      }\n    }), _jsx(Text, {\n      style: {\n        color: \"white\"\n      },\n      children: \"Password \"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          password: v\n        }));\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: login,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    }), showErrorMessage.loginFailed === true ? _jsx(View, {\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Please verify your email or password and try again.\"\n      })\n    }) : _jsx(_Fragment, {}), showErrorMessage.loginException === true ? _jsx(View, {\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Somenthing unexepcted happened, please try again.\"\n      })\n    }) : _jsx(_Fragment, {})]\n  });\n  var styles = StyleSheet.create({\n    container: {\n      maxWidth: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#2D2D44\",\n      padding: 100\n    },\n    input: {\n      height: 40,\n      width: 200,\n      margin: 12,\n      borderWidth: 1,\n      padding: 10,\n      borderColor: \"white\",\n      color: \"white\"\n    },\n    sendButton: {\n      backgroundColor: \"green\",\n      height: 40,\n      width: 80,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  });\n};\n\nvar HomePage = function HomePage() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"/\",\n        component: AdminRooms,\n        options: {\n          title: \"AdminRooms\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"/settings\",\n        component: Settings,\n        options: {\n          title: \"Settings\"\n        }\n      })]\n    })\n  });\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  });\n};\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n                color = _ref4.color,\n                size = _ref4.size;\n            var iconName;\n            if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"/\",\n        component: AdminRooms,\n        options: {\n          title: \"AdminRooms\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"/settings\",\n        component: Settings,\n        options: {\n          title: \"Settings\"\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["NavigationContainer","AdminRooms","createBottomTabNavigator","Settings","Ionicons","useState","Tab","LoginPage","authenticated","setAuthenticated","email","password","userCredentials","setUserCredential","loginFailed","loginException","showErrorMessage","setShowErrorMessage","url","host","headers","Accept","body","JSON","stringify","login","fetch","method","credentials","response","json","undefined","styles","container","fontSize","margin","color","input","v","sendButton","StyleSheet","create","maxWidth","alignItems","justifyContent","backgroundColor","padding","height","width","borderWidth","borderColor","HomePage","route","tabBarIcon","focused","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","flex","App"],"mappings":";;;;;;;;;;;;AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;;AAEA,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACvB,kBAA0CF,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA6CJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAArD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,iBAAxB;;AACA,mBAAgDR,QAAQ,CAAC;AAAES,IAAAA,WAAW,EAAE,KAAf;AAAsBC,IAAAA,cAAc,EAAE;AAAtC,GAAD,CAAxD;AAAA;AAAA,MAAOC,gBAAP;AAAA,MAAyBC,mBAAzB;;AAEA,MAAMC,GAAG,GAAGC,IAAI,GAAG,aAAnB;AACA,MAAMC,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,kBAAV;AAA8B,oBAAgB;AAA9C,GAAhB;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeZ,eAAf,CAAb;;AACA,MAAMa,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACbR,YAAAA,mBAAmB,CAAC;AAAEH,cAAAA,WAAW,EAAE,KAAf;AAAsBC,cAAAA,cAAc,EAAE;AAAtC,aAAD,CAAnB;AADa;AAAA;AAAA,6CAGWW,KAAK,CAACR,GAAD,EAAM;AAAES,cAAAA,MAAM,EAAE,MAAV;AAAkBC,cAAAA,WAAW,EAAE,SAA/B;AAA0CR,cAAAA,OAAO,EAAEA,OAAnD;AAA4DE,cAAAA,IAAI,EAAEA;AAAlE,aAAN,CAHhB;;AAAA;AAGNO,YAAAA,QAHM;AAAA;AAAA,6CAIOA,QAAQ,CAACC,IAAT,EAJP;;AAAA;AAINA,YAAAA,IAJM;AAKZrB,YAAAA,gBAAgB,CAACqB,IAAD,CAAhB;AACA,gBAAIA,IAAI,CAACpB,KAAL,KAAeqB,SAAnB,EAA8Bd,mBAAmB,iCAAMD,gBAAN;AAAwBF,cAAAA,WAAW,EAAE;AAArC,eAAnB;AANlB;AAAA;;AAAA;AAAA;AAAA;AAQZG,YAAAA,mBAAmB,iCAAMD,gBAAN;AAAwBD,cAAAA,cAAc,EAAE;AAAxC,eAAnB;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAWA,SACC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACC,SAApB;AAAA,eACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,MAAM,EAAE,EAAxB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAb;AAAA;AAAA,MADD,EAEC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA,MAFD,EAGC,KAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,MAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,eAAOzB,iBAAiB,iCAAMD,eAAN;AAAuBF,UAAAA,KAAK,EAAE4B;AAA9B,WAAxB;AAAA;AAA9C,MAHD,EAIC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA,MAJD,EAKC,KAAC,SAAD;AACC,MAAA,eAAe,EAAE,IADlB;AAEC,MAAA,KAAK,EAAEJ,MAAM,CAACK,KAFf;AAGC,MAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,eAAOzB,iBAAiB,iCAAMD,eAAN;AAAuBD,UAAAA,QAAQ,EAAE2B;AAAjC,WAAxB;AAAA;AAHf,MALD,EAUC,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEN,MAAM,CAACO,UAAhC;AAA4C,MAAA,OAAO,EAAEd,KAArD;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MAVD,EAcEpB,gBAAgB,CAACF,WAAjB,KAAiC,IAAjC,GACA,KAAC,IAAD;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MADA,GAKA,mBAnBF,EAqBEpB,gBAAgB,CAACD,cAAjB,KAAoC,IAApC,GACA,KAAC,IAAD;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEqB,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MADA,GAKA,mBA1BF;AAAA,IADD;AAgCA,MAAMJ,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,IAAAA,SAAS,EAAE;AACVS,MAAAA,QAAQ,EAAE,MADA;AAEVC,MAAAA,UAAU,EAAE,QAFF;AAGVC,MAAAA,cAAc,EAAE,QAHN;AAIVC,MAAAA,eAAe,EAAE,SAJP;AAKVC,MAAAA,OAAO,EAAE;AALC,KADqB;AAQhCT,IAAAA,KAAK,EAAE;AACNU,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,GAFD;AAGNb,MAAAA,MAAM,EAAE,EAHF;AAINc,MAAAA,WAAW,EAAE,CAJP;AAKNH,MAAAA,OAAO,EAAE,EALH;AAMNI,MAAAA,WAAW,EAAE,OANP;AAONd,MAAAA,KAAK,EAAE;AAPD,KARyB;AAiBhCG,IAAAA,UAAU,EAAE;AACXM,MAAAA,eAAe,EAAE,OADN;AAEXE,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXL,MAAAA,UAAU,EAAE,QAJD;AAKXC,MAAAA,cAAc,EAAE;AALL;AAjBoB,GAAlB,CAAf;AAyBA,CA5ED;;AA8EA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,GAAD,CAAK,SAAL;AACC,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC9BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBlB,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXmB,IAAW,SAAXA,IAAW;AACzC,gBAAIC,QAAJ;AACA,gBAAIJ,KAAK,CAACK,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIJ,KAAK,CAACK,IAAN,KAAe,WAAnB,EAAgCD,QAAQ,GAAG,kBAAX;AAErC,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEA,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAEnB;AAA7C,cAAP;AACA,WAP6B;AAQ9BsB,UAAAA,qBAAqB,EAAE,OARO;AAS9BC,UAAAA,uBAAuB,EAAE;AATK,SAAhB;AAAA,OADhB;AAAA,iBAaC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAqB,QAAA,SAAS,EAAE1D,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAE2D,UAAAA,KAAK,EAAE;AAAT;AAArD,QAbD,EAcC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,WAAjB;AAA6B,QAAA,SAAS,EAAEzD,QAAxC;AAAkD,QAAA,OAAO,EAAE;AAAEyD,UAAAA,KAAK,EAAE;AAAT;AAA3D,QAdD;AAAA;AADD,IADD;AAqBA,MAAM5B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,IAAAA,SAAS,EAAE;AACV4B,MAAAA,IAAI,EAAE,CADI;AAEVhB,MAAAA,eAAe,EAAE,MAFP;AAGVF,MAAAA,UAAU,EAAE,QAHF;AAIVC,MAAAA,cAAc,EAAE;AAJN;AADqB,GAAlB,CAAf;AAQA,CA9BD;;AAgCA,eAAe,SAASkB,GAAT,GAAe;AAC7B,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,GAAD,CAAK,SAAL;AACC,MAAA,aAAa,EAAE;AAAA,YAAGV,KAAH,SAAGA,KAAH;AAAA,eAAgB;AAC9BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBlB,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXmB,IAAW,SAAXA,IAAW;AACzC,gBAAIC,QAAJ;AACA,gBAAIJ,KAAK,CAACK,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIJ,KAAK,CAACK,IAAN,KAAe,WAAnB,EAAgCD,QAAQ,GAAG,kBAAX;AAErC,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEA,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAEnB;AAA7C,cAAP;AACA,WAP6B;AAQ9BsB,UAAAA,qBAAqB,EAAE,OARO;AAS9BC,UAAAA,uBAAuB,EAAE;AATK,SAAhB;AAAA,OADhB;AAAA,iBAaC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAqB,QAAA,SAAS,EAAE1D,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAE2D,UAAAA,KAAK,EAAE;AAAT;AAArD,QAbD,EAcC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,WAAjB;AAA6B,QAAA,SAAS,EAAEzD,QAAxC;AAAkD,QAAA,OAAO,EAAE;AAAEyD,UAAAA,KAAK,EAAE;AAAT;AAA3D,QAdD;AAAA;AADD,IADD;AAqBA;AAED,IAAM5B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCR,EAAAA,SAAS,EAAE;AACV4B,IAAAA,IAAI,EAAE,CADI;AAEVhB,IAAAA,eAAe,EAAE,MAFP;AAGVF,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { useState } from \"react\";\n\nconst Tab = createBottomTabNavigator();\n\nconst LoginPage = () => {\n\tconst [authenticated, setAuthenticated] = useState(\"\");\n\tconst [userCredentials, setUserCredential] = useState({ email: \"\", password: \"\" });\n\tconst [showErrorMessage, setShowErrorMessage] = useState({ loginFailed: false, loginException: false });\n\n\tconst url = host + \"/auth/login\";\n\tconst headers = { Accept: \"application/json\", \"Content-Type\": \"application/json\" };\n\tconst body = JSON.stringify(userCredentials);\n\tconst login = async () => {\n\t\tsetShowErrorMessage({ loginFailed: false, loginException: false });\n\t\ttry {\n\t\t\tconst response = await fetch(url, { method: \"POST\", credentials: \"include\", headers: headers, body: body });\n\t\t\tconst json = await response.json();\n\t\t\tsetAuthenticated(json);\n\t\t\tif (json.email === undefined) setShowErrorMessage({ ...showErrorMessage, loginFailed: true });\n\t\t} catch (error) {\n\t\t\tsetShowErrorMessage({ ...showErrorMessage, loginException: true });\n\t\t}\n\t};\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Text style={{ fontSize: 20, margin: 40, color: \"white\" }}>Login Page</Text>\n\t\t\t<Text style={{ color: \"white\" }}>Email </Text>\n\t\t\t<TextInput style={styles.input} onChangeText={(v) => setUserCredential({ ...userCredentials, email: v })} />\n\t\t\t<Text style={{ color: \"white\" }}>Password </Text>\n\t\t\t<TextInput\n\t\t\t\tsecureTextEntry={true}\n\t\t\t\tstyle={styles.input}\n\t\t\t\tonChangeText={(v) => setUserCredential({ ...userCredentials, password: v })}\n\t\t\t/>\n\t\t\t<TouchableOpacity style={styles.sendButton} onPress={login}>\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\n\t\t\t</TouchableOpacity>\n\n\t\t\t{showErrorMessage.loginFailed === true ? (\n\t\t\t\t<View>\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Please verify your email or password and try again.</Text>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t\t{showErrorMessage.loginException === true ? (\n\t\t\t\t<View>\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Somenthing unexepcted happened, please try again.</Text>\n\t\t\t\t</View>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t</View>\n\t);\n\n\tconst styles = StyleSheet.create({\n\t\tcontainer: {\n\t\t\tmaxWidth: \"100%\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t\tbackgroundColor: \"#2D2D44\",\n\t\t\tpadding: 100,\n\t\t},\n\t\tinput: {\n\t\t\theight: 40,\n\t\t\twidth: 200,\n\t\t\tmargin: 12,\n\t\t\tborderWidth: 1,\n\t\t\tpadding: 10,\n\t\t\tborderColor: \"white\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t\tsendButton: {\n\t\t\tbackgroundColor: \"green\",\n\t\t\theight: 40,\n\t\t\twidth: 80,\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t},\n\t});\n};\n\nconst HomePage = () => {\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Tab.Navigator\n\t\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\t\tlet iconName;\n\t\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\n\t\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\n\t\t\t\t\t\t// You can return any component that you like here!\n\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\n\t\t\t\t\t},\n\t\t\t\t\ttabBarActiveTintColor: \"green\",\n\t\t\t\t\ttabBarInactiveTintColor: \"gray\",\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Tab.Screen name=\"/\" component={AdminRooms} options={{ title: \"AdminRooms\" }} />\n\t\t\t\t<Tab.Screen name=\"/settings\" component={Settings} options={{ title: \"Settings\" }} />\n\t\t\t\t{/* <Tab.Screen name=\"/login\" component={AuthLogin} /> */}\n\t\t\t</Tab.Navigator>\n\t\t</NavigationContainer>\n\t);\n\tconst styles = StyleSheet.create({\n\t\tcontainer: {\n\t\t\tflex: 1,\n\t\t\tbackgroundColor: \"#fff\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t},\n\t});\n};\n\nexport default function App() {\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Tab.Navigator\n\t\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\t\tlet iconName;\n\t\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\n\t\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\n\t\t\t\t\t\t// You can return any component that you like here!\n\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\n\t\t\t\t\t},\n\t\t\t\t\ttabBarActiveTintColor: \"green\",\n\t\t\t\t\ttabBarInactiveTintColor: \"gray\",\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Tab.Screen name=\"/\" component={AdminRooms} options={{ title: \"AdminRooms\" }} />\n\t\t\t\t<Tab.Screen name=\"/settings\" component={Settings} options={{ title: \"Settings\" }} />\n\t\t\t\t{/* <Tab.Screen name=\"/login\" component={AuthLogin} /> */}\n\t\t\t</Tab.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}