{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { host } from \"../../Constants\";\nimport { AppContext } from \"../../context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Room = function Room(_ref) {\n  var r = _ref.r,\n      rooms = _ref.rooms,\n      setRooms = _ref.setRooms;\n\n  var _useState = useState(r),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var updateRoom = function updateRoom() {\n    var companyId, response, result, newRoom;\n    return _regeneratorRuntime.async(function updateRoom$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 2:\n            companyId = _context.sent;\n            room.companyId = companyId;\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.id, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(room)\n            }));\n\n          case 7:\n            response = _context.sent;\n            alert(\"done\");\n            setRooms(rooms.filter(function (element) {\n              return element.id !== room.id;\n            }));\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 12:\n            result = _context.sent;\n            newRoom = {\n              id: result.lastInsertRowid,\n              name: room.name,\n              unique_name: room.unique_name\n            };\n            setRooms(function (rooms) {\n              return [].concat(_toConsumableArray(rooms), [newRoom]);\n            });\n            console.log(result);\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 18]], Promise);\n  };\n\n  var deleteRoom = function deleteRoom() {\n    var response;\n    return _regeneratorRuntime.async(function deleteRoom$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.id, {\n              method: \"DELETE\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            setRooms(rooms.filter(function (element) {\n              return element.id !== room.id;\n            }));\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: {\n      marginBottom: 10\n    },\n    children: [_jsxs(View, {\n      style: {\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10\n        },\n        children: \"Room Name\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: room.name,\n        onChangeText: function onChangeText(v) {\n          return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n            name: v\n          }));\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10\n        },\n        children: \"unique_name\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: room.unique_name,\n        onChangeText: function onChangeText(v) {\n          return setRoom(_objectSpread(_objectSpread({}, room), {}, {\n            unique_name: v.replace(/\\s/g, \"\")\n          }));\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        justifyContent: \"center\",\n        flexDirection: \"row\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.sendButton, {\n          marginRight: 5,\n          backgroundColor: \"#41BAEE\"\n        }],\n        onPress: updateRoom,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Save\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.sendButton, {\n          marginRight: 5,\n          backgroundColor: \"#AB433F\"\n        }],\n        onPress: deleteRoom,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Delete\"\n        })\n      })]\n    })]\n  });\n};\n\nvar Rooms = function Rooms() {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var user = useContext(AppContext);\n\n  var addNewRoom = function addNewRoom() {\n    var newRoom = {\n      id: 0,\n      name: \"\",\n      unique_name: \"\"\n    };\n    if (rooms.find(function (r) {\n      return r.id == 0;\n    }) === undefined) setRooms(function (rooms) {\n      return [].concat(_toConsumableArray(rooms), [newRoom]);\n    });\n  };\n\n  var getRooms = function getRooms() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getRooms$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/admin/admCompany\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                companyId: companyId,\n                user: user.user\n              })\n            }));\n\n          case 6:\n            response = _context3.sent;\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context4.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsxs(View, {\n    style: styles.cardContainer,\n    children: [rooms.map(function (r) {\n      return _jsx(Room, {\n        r: r,\n        rooms: rooms,\n        setRooms: setRooms\n      }, r.id);\n    }), _jsx(TouchableOpacity, {\n      onPress: addNewRoom,\n      style: {\n        backgroundColor: \"#43D95D\",\n        borderRadius: 50,\n        height: 40,\n        width: 40,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"+\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 480,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#CCCCCC\",\n    paddingLeft: 10\n  },\n  sendButton: {\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Rooms.js"],"names":["useContext","useEffect","useState","host","AppContext","AsyncStorage","Room","r","rooms","setRooms","room","setRoom","updateRoom","getItem","companyId","fetch","id","method","headers","Accept","body","JSON","stringify","response","alert","filter","element","json","result","newRoom","lastInsertRowid","name","unique_name","console","log","deleteRoom","marginBottom","margin","styles","input","v","replace","justifyContent","flexDirection","sendButton","marginRight","backgroundColor","color","Rooms","user","addNewRoom","find","undefined","getRooms","cardContainer","map","borderRadius","height","width","alignItems","StyleSheet","create","maxWidth","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","paddingLeft"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { host } from \"../../Constants\";\r\nimport { AppContext } from \"../../context\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Room = ({ r, rooms, setRooms }) => {\r\n\tconst [room, setRoom] = useState(r);\r\n\r\n\tconst updateRoom = async () => {\r\n\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\troom.companyId = companyId;\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.id, {\r\n\t\t\t\tmethod: \"POST\",\r\n\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify(room),\r\n\t\t\t});\r\n\t\t\talert(\"done\");\r\n\t\t\tsetRooms(rooms.filter((element) => element.id !== room.id));\r\n\t\t\tconst result = await response.json();\r\n\t\t\tconst newRoom = { id: result.lastInsertRowid, name: room.name, unique_name: room.unique_name };\r\n\t\t\tsetRooms((rooms) => [...rooms, newRoom]);\r\n\r\n\t\t\tconsole.log(result);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteRoom = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.id, {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t});\r\n\t\t\tsetRooms(rooms.filter((element) => element.id !== room.id));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ margin: 10 }}>Room Name</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tvalue={room.name}\r\n\t\t\t\t\tonChangeText={(v) => setRoom({ ...room, name: v })}\r\n\t\t\t\t></TextInput>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ margin: 10 }}>unique_name</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tvalue={room.unique_name}\r\n\t\t\t\t\tonChangeText={(v) => setRoom({ ...room, unique_name: v.replace(/\\s/g, \"\") })}\r\n\t\t\t\t></TextInput>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ justifyContent: \"center\", flexDirection: \"row\" }}>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={[styles.sendButton, { marginRight: 5, backgroundColor: \"#41BAEE\" }]}\r\n\t\t\t\t\tonPress={updateRoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Save</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={[styles.sendButton, { marginRight: 5, backgroundColor: \"#AB433F\" }]}\r\n\t\t\t\t\tonPress={deleteRoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Delete</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Rooms = () => {\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst user = useContext(AppContext);\r\n\tconst addNewRoom = () => {\r\n\t\tconst newRoom = { id: 0, name: \"\", unique_name: \"\" };\r\n\t\tif (rooms.find((r) => r.id == 0) === undefined) setRooms((rooms) => [...rooms, newRoom]);\r\n\t};\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/room/admin/admCompany\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ companyId: companyId, user: user.user }),\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<View style={styles.cardContainer}>\r\n\t\t\t{rooms.map((r) => {\r\n\t\t\t\treturn <Room key={r.id} r={r} rooms={rooms} setRooms={setRooms} />;\r\n\t\t\t})}\r\n\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tonPress={addNewRoom}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: \"#43D95D\",\r\n\t\t\t\t\tborderRadius: 50,\r\n\t\t\t\t\theight: 40,\r\n\t\t\t\t\twidth: 40,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>+</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 480,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: \"#CCCCCC\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}