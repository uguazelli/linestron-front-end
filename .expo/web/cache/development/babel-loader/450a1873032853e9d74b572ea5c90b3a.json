{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"/\",\n        component: AdminRooms,\n        options: {\n          title: \"AdminRooms\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"/settings\",\n        component: Settings,\n        options: {\n          title: \"Settings\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"/login\",\n        component: AuthLogin\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["NavigationContainer","AdminRooms","createBottomTabNavigator","Settings","Ionicons","useState","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","AuthLogin","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;AAEA,eAAe,SAASK,GAAT,GAAe;AAC7B,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,GAAD,CAAK,SAAL;AACC,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC9BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACzC,gBAAIC,QAAJ;AACA,gBAAIL,KAAK,CAACM,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIL,KAAK,CAACM,IAAN,KAAe,WAAnB,EAAgCD,QAAQ,GAAG,kBAAX;AAErC,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEA,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACA,WAP6B;AAQ9BI,UAAAA,qBAAqB,EAAE,OARO;AAS9BC,UAAAA,uBAAuB,EAAE;AATK,SAAhB;AAAA,OADhB;AAAA,iBAaC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAqB,QAAA,SAAS,EAAEf,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAEgB,UAAAA,KAAK,EAAE;AAAT;AAArD,QAbD,EAcC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,WAAjB;AAA6B,QAAA,SAAS,EAAEd,QAAxC;AAAkD,QAAA,OAAO,EAAE;AAAEc,UAAAA,KAAK,EAAE;AAAT;AAA3D,QAdD,EAeC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAEC;AAArC,QAfD;AAAA;AADD,IADD;AAqBA;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { useState } from \"react\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Tab.Navigator\n\t\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\t\tlet iconName;\n\t\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\n\t\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\n\t\t\t\t\t\t// You can return any component that you like here!\n\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\n\t\t\t\t\t},\n\t\t\t\t\ttabBarActiveTintColor: \"green\",\n\t\t\t\t\ttabBarInactiveTintColor: \"gray\",\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Tab.Screen name=\"/\" component={AdminRooms} options={{ title: \"AdminRooms\" }} />\n\t\t\t\t<Tab.Screen name=\"/settings\" component={Settings} options={{ title: \"Settings\" }} />\n\t\t\t\t<Tab.Screen name=\"/login\" component={AuthLogin} />\n\t\t\t</Tab.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}