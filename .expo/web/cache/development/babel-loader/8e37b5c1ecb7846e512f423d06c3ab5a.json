{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Settings from \"./Settings\";\nimport Emit from \"./Emit\";\nimport Admin from \"./admin/Admin\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"green\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"/admin\",\n      component: Admin,\n      options: {\n        title: \"Admin\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"/\",\n      component: Emit,\n      options: {\n        title: \"Emit\"\n      }\n    })]\n  });\n}\n\nexport default function NavigationTab() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"/settings\",\n        component: Settings,\n        options: {\n          title: \"Settings\"\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/NavigationTab.js"],"names":["NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Ionicons","Settings","Emit","Admin","Tab","Stack","Home","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","NavigationTab","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,GAAG,GAAGN,wBAAwB,EAApC;AACA,IAAMO,KAAK,GAAGN,0BAA0B,EAAxC;;AAEA,SAASO,IAAT,GAAgB;AACf,SACC,MAAC,GAAD,CAAK,SAAL;AACC,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC9BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACzC,cAAIC,QAAJ;AACA,cAAIL,KAAK,CAACM,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIL,KAAK,CAACM,IAAN,KAAe,WAAnB,EAAgCD,QAAQ,GAAG,kBAAX;AAErC,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACA,SAP6B;AAQ9BI,QAAAA,qBAAqB,EAAE,OARO;AAS9BC,QAAAA,uBAAuB,EAAE;AATK,OAAhB;AAAA,KADhB;AAAA,eAaC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAEZ,KAArC;AAA4C,MAAA,OAAO,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT;AAArD,MAbD,EAcC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,GAAjB;AAAqB,MAAA,SAAS,EAAEd,IAAhC;AAAsC,MAAA,OAAO,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT;AAA/C,MAdD;AAAA,IADD;AAkBA;;AAED,eAAe,SAASC,aAAT,GAAyB;AACvC,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,KAAD,CAAO,SAAP;AAAA,iBACC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEX,IAArC;AAA2C,QAAA,OAAO,EAAE;AAAEY,UAAAA,WAAW,EAAE;AAAf;AAApD,QADD,EAEC,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,WAAnB;AAA+B,QAAA,SAAS,EAAEjB,QAA1C;AAAoD,QAAA,OAAO,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT;AAA7D,QAFD;AAAA;AADD,IADD;AAQA;AAED,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import { StyleSheet } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport Settings from \"./Settings\";\r\nimport Emit from \"./Emit\";\r\nimport Admin from \"./admin/Admin\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<Tab.Navigator\r\n\t\t\tscreenOptions={({ route }) => ({\r\n\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\r\n\t\t\t\t\tlet iconName;\r\n\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\r\n\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\r\n\t\t\t\t\t// You can return any component that you like here!\r\n\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\r\n\t\t\t\t},\r\n\t\t\t\ttabBarActiveTintColor: \"green\",\r\n\t\t\t\ttabBarInactiveTintColor: \"gray\",\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<Tab.Screen name=\"/admin\" component={Admin} options={{ title: \"Admin\" }} />\r\n\t\t\t<Tab.Screen name=\"/\" component={Emit} options={{ title: \"Emit\" }} />\r\n\t\t</Tab.Navigator>\r\n\t);\r\n}\r\n\r\nexport default function NavigationTab() {\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Stack.Navigator>\r\n\t\t\t\t<Stack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\r\n\t\t\t\t<Stack.Screen name=\"/settings\" component={Settings} options={{ title: \"Settings\" }} />\r\n\t\t\t</Stack.Navigator>\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}