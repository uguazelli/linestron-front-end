{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Accordion from \"react-native-collapsible/Accordion\";\nimport { io } from \"socket.io-client\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar socket = io(\"localhost:3000\");\n\nvar Room = function Room(_ref) {\n  var room = _ref.room;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var emitValue = function emitValue() {\n    return socket.emit(\"emmitToRoom\", {\n      room: room,\n      value: value\n    });\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.cardContainer,\n      children: [_jsxs(Text, {\n        children: [\"Room Number \", room]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: value,\n        onChangeText: setValue\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: emitValue,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Send\"\n        })\n      })]\n    })\n  });\n};\n\nvar Rooms = function Rooms() {\n  return _jsxs(View, {\n    children: [_jsx(Room, {\n      room: 1\n    }), _jsx(Room, {\n      room: 2\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    alignContent: \"center\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 20\n  },\n  roomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  sendButton: {\n    backgroundColor: \"green\",\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Rooms.js"],"names":["useState","Accordion","io","socket","Room","room","value","setValue","emitValue","emit","styles","cardContainer","input","sendButton","color","Rooms","StyleSheet","create","width","maxWidth","backgroundColor","alignContent","padding","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","roomContainer","flexDirection","alignItems","justifyContent","borderWidth"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;AACA,IAAMC,MAAM,GAAGD,EAAE,CAAC,gBAAD,CAAjB;;AAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC1B,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAML,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA2B;AAAEJ,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,KAAK,EAAEA;AAArB,KAA3B,CAAN;AAAA,GAAlB;;AAEA,SACC,KAAC,UAAD;AAAA,cACC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACC,aAApB;AAAA,iBACC,MAAC,IAAD;AAAA,mCAAmBN,IAAnB;AAAA,QADD,EAEC,KAAC,SAAD;AAAW,QAAA,KAAK,EAAEK,MAAM,CAACE,KAAzB;AAAgC,QAAA,KAAK,EAAEN,KAAvC;AAA8C,QAAA,YAAY,EAAEC;AAA5D,QAFD,EAGC,KAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEG,MAAM,CAACG,UAAhC;AAA4C,QAAA,OAAO,EAAEL,SAArD;AAAA,kBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEM,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AADD,QAHD;AAAA;AADD,IADD;AAWA,CAfD;;AAiBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnB,SACC,MAAC,IAAD;AAAA,eACC,KAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,MADD,EAEC,KAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,MAFD;AAAA,IADD;AAMA,CAPD;;AASA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,aAAa,EAAE;AACdO,IAAAA,KAAK,EAAE,KADO;AAEdC,IAAAA,QAAQ,EAAE,GAFI;AAGdC,IAAAA,eAAe,EAAE,OAHH;AAIdC,IAAAA,YAAY,EAAE,QAJA;AAKdC,IAAAA,OAAO,EAAE,EALK;AAMdC,IAAAA,MAAM,EAAE,EANM;AAOdC,IAAAA,WAAW,EAAE,MAPC;AAQdC,IAAAA,YAAY,EAAE;AACbP,MAAAA,KAAK,EAAE,CADM;AAEbQ,MAAAA,MAAM,EAAE;AAFK,KARA;AAYdC,IAAAA,aAAa,EAAE,IAZD;AAadC,IAAAA,YAAY,EAAE,IAbA;AAcdC,IAAAA,SAAS,EAAE,EAdG;AAedC,IAAAA,YAAY,EAAE;AAfA,GADiB;AAkBhCC,EAAAA,aAAa,EAAE;AACdC,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,UAAU,EAAE,QAFE;AAGdC,IAAAA,cAAc,EAAE;AAHF,GAlBiB;AAuBhCtB,EAAAA,KAAK,EAAE;AACNc,IAAAA,MAAM,EAAE,EADF;AAENH,IAAAA,MAAM,EAAE,EAFF;AAGNY,IAAAA,WAAW,EAAE,CAHP;AAINb,IAAAA,OAAO,EAAE;AAJH,GAvByB;AA6BhCT,EAAAA,UAAU,EAAE;AACXO,IAAAA,eAAe,EAAE,OADN;AAEXM,IAAAA,MAAM,EAAE,EAFG;AAGXR,IAAAA,KAAK,EAAE,EAHI;AAIXe,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,cAAc,EAAE;AALL;AA7BoB,CAAlB,CAAf;AAsCA,eAAenB,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport Accordion from \"react-native-collapsible/Accordion\";\r\n\r\nimport { io } from \"socket.io-client\";\r\nconst socket = io(\"localhost:3000\");\r\n\r\nconst Room = ({ room }) => {\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst emitValue = () => socket.emit(\"emmitToRoom\", { room: room, value: value });\r\n\r\n\treturn (\r\n\t\t<ScrollView>\r\n\t\t\t<View style={styles.cardContainer}>\r\n\t\t\t\t<Text>Room Number {room}</Text>\r\n\t\t\t\t<TextInput style={styles.input} value={value} onChangeText={setValue} />\r\n\t\t\t\t<TouchableOpacity style={styles.sendButton} onPress={emitValue}>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst Rooms = () => {\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Room room={1} />\r\n\t\t\t<Room room={2} />\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\talignContent: \"center\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 20,\r\n\t},\r\n\troomContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmargin: 12,\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"green\",\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}