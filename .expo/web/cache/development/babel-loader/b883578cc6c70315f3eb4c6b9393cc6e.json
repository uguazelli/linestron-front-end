{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { login } from \"../../Utils\";\nimport AuthLogin from \"./AuthLogin\";\nimport Rooms from \"./Rooms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AdminRooms = function AdminRooms() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var authenticate = function authenticate() {\n    var response;\n    return _regeneratorRuntime.async(function authenticate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login());\n\n          case 3:\n            response = _context.sent;\n            setData(response.json());\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    authenticate();\n  }, []);\n  return _jsx(Rooms, {});\n};\n\nexport default AdminRooms;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AdminRooms.js"],"names":["useEffect","useState","login","AuthLogin","Rooms","AdminRooms","authenticated","setAuthenticated","data","setData","authenticate","response","json","console","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,KAAT;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,kBAA0CJ,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOK,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEIR,KAAK,EAFT;;AAAA;AAEbS,YAAAA,QAFa;AAGnBF,YAAAA,OAAO,CAACE,QAAQ,CAACC,IAAT,EAAD,CAAP;AAHmB;AAAA;;AAAA;AAAA;AAAA;AAKnBC,YAAAA,OAAO,CAACC,KAAR;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AASAd,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;AAKA,SAAO,KAAC,KAAD,KAAP;AACA,CAnBD;;AAqBA,eAAeL,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { login } from \"../../Utils\";\r\nimport AuthLogin from \"./AuthLogin\";\r\nimport Rooms from \"./Rooms\";\r\n\r\nconst AdminRooms = () => {\r\n\tconst [authenticated, setAuthenticated] = useState(\"\");\r\n\tconst [data, setData] = useState(\"\");\r\n\r\n\tconst authenticate = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await login();\r\n\t\t\tsetData(response.json());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tauthenticate();\r\n\t}, []);\r\n\r\n\t// return <View>{authenticated ? <Rooms /> : <AuthLogin setAuthenticated={setAuthenticated} />}</View>;\r\n\treturn <Rooms />;\r\n};\r\n\r\nexport default AdminRooms;\r\n"]},"metadata":{},"sourceType":"module"}