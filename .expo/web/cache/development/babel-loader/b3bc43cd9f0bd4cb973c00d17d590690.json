{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Clipboard from \"@react-native-clipboard/clipboard\";\nimport { AppContext } from \"../context\";\nimport { io } from \"socket.io-client\";\nimport { host } from \"../Constants\";\nimport { hostSocketIO } from \"../Constants\";\nvar socket = io(hostSocketIO);\nimport { useToast } from \"react-native-toast-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n\nvar Room = function Room(_ref) {\n  var room = _ref.room;\n  var toast = useToast();\n  var url = \"http://\" + hostSocketIO + \"/company/\" + room.companySlug + \"/room/\" + room.unique_name;\n\n  var _useState3 = useState(room.currentNumber),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var roomName = room.companySlug + \"_\" + room.unique_name;\n\n  var copyToClipboard = function copyToClipboard() {\n    toast.show(\"Copied to clipboard\", {\n      placement: \"top\"\n    });\n    Clipboard.setString(url);\n  };\n\n  var addition = function addition() {\n    return setValue(value + 1);\n  };\n\n  var subtraction = function subtraction() {\n    return setValue(value - 1);\n  };\n\n  var emitValue = function emitValue() {\n    var response;\n    return _regeneratorRuntime.async(function emitValue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.unique_name + \"/current\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                number: value\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            socket.emit(\"emmitToRoom\", {\n              room: roomName,\n              value: value\n            });\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(emitValue, [value]);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.roomContainer,\n      children: [_jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(Text, {\n              style: styles.modalText,\n              children: \"Hello World!\"\n            }), _jsx(Pressable, {\n              style: [styles.button, styles.buttonClose],\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.textStyle,\n                children: \"Hide Modal\"\n              })\n            })]\n          })\n        })\n      }), _jsx(Text, {\n        style: {\n          fontSize: 30,\n          marginBottom: 10\n        },\n        children: room.name\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          marginBottom: 10\n        },\n        onPress: copyToClipboard,\n        children: [_jsx(Text, {\n          children: \"URL \"\n        }), _jsx(TextInput, {\n          editable: false,\n          style: styles.input,\n          value: url\n        })]\n      }), _jsx(Text, {\n        style: {\n          marginBottom: 10\n        },\n        children: \"Last generated number \"\n      }), _jsx(TextInput, {\n        editable: false,\n        style: styles.input,\n        value: room.lastNumber.toString()\n      }), _jsxs(View, {\n        style: {\n          marginTop: 10\n        },\n        children: [_jsx(Text, {\n          children: \"Current Number: \"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginTop: 10\n          },\n          children: [_jsx(TouchableOpacity, {\n            style: styles.setValueButton,\n            onPress: subtraction,\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\"\n              },\n              children: \"-\"\n            })\n          }), _jsx(TextInput, {\n            style: styles.setValueInput,\n            value: value.toString(),\n            editable: false\n          }), _jsx(TouchableOpacity, {\n            style: styles.setValueButton,\n            onPress: addition,\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\"\n              },\n              children: \"+\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar Emit = function Emit() {\n  var user = useContext(AppContext);\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rooms = _useState6[0],\n      setRooms = _useState6[1];\n\n  var getRooms = function getRooms() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getRooms$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/user/company/\" + companyId, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user.user\n              })\n            }));\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context3.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: rooms.map(function (room) {\n      return _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsx(Room, {\n          room: room\n        })\n      }, room.id);\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  cardContainer: {\n    width: \"95%\",\n    backgroundColor: \"#fff\",\n    maxWidth: 480,\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  roomContainer: {\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#CCCCCC\",\n    backgroundColor: \"#F2F2F2\",\n    paddingLeft: 10\n  },\n  setValueInput: {\n    width: 80,\n    height: 40,\n    backgroundColor: \"#F2F2F2\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  setValueButton: {\n    backgroundColor: \"#43D95D\",\n    height: 40,\n    width: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Emit;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Emit.js"],"names":["useContext","useEffect","useState","AsyncStorage","Clipboard","AppContext","io","host","hostSocketIO","socket","useToast","modalVisible","setModalVisible","Room","room","toast","url","companySlug","unique_name","currentNumber","value","setValue","roomName","copyToClipboard","show","placement","setString","addition","subtraction","emitValue","fetch","method","headers","Accept","body","JSON","stringify","number","response","emit","json","console","log","styles","roomContainer","centeredView","modalView","modalText","button","buttonClose","textStyle","fontSize","marginBottom","name","input","lastNumber","toString","marginTop","flexDirection","setValueButton","color","setValueInput","Emit","user","rooms","setRooms","getRooms","getItem","companyId","r","alignItems","map","cardContainer","id","StyleSheet","create","flex","justifyContent","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","maxWidth","borderWidth","borderColor","paddingLeft","textAlign"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tScrollView,\r\n\tStyleSheet,\r\n\tText,\r\n\tTextInput,\r\n\tTouchableHighlight,\r\n\tTouchableOpacity,\r\n\tView,\r\n\tModal,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Clipboard from \"@react-native-clipboard/clipboard\";\r\nimport { AppContext } from \"../context\";\r\nimport { io } from \"socket.io-client\";\r\nimport { host } from \"../Constants\";\r\nimport { hostSocketIO } from \"../Constants\";\r\nconst socket = io(hostSocketIO);\r\n// const socket = io(\"localhost:3000\");\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nconst [modalVisible, setModalVisible] = useState(false);\r\n\r\nconst Room = ({ room }) => {\r\n\tconst toast = useToast();\r\n\tconst url = `http://${hostSocketIO}/company/${room.companySlug}/room/${room.unique_name}`;\r\n\tconst [value, setValue] = useState(room.currentNumber);\r\n\tconst roomName = room.companySlug + \"_\" + room.unique_name;\r\n\r\n\tconst copyToClipboard = () => {\r\n\t\ttoast.show(\"Copied to clipboard\", {\r\n\t\t\tplacement: \"top\",\r\n\t\t});\r\n\t\tClipboard.setString(url);\r\n\t};\r\n\r\n\tconst addition = () => setValue(value + 1);\r\n\tconst subtraction = () => setValue(value - 1);\r\n\r\n\tconst emitValue = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.unique_name + \"/current\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ number: value }),\r\n\t\t\t});\r\n\r\n\t\t\tsocket.emit(\"emmitToRoom\", { room: roomName, value: value });\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(emitValue, [value]);\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={styles.roomContainer}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={modalVisible}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetModalVisible(!modalVisible);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={styles.centeredView}>\r\n\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t<Text style={styles.modalText}>Hello World!</Text>\r\n\t\t\t\t\t\t\t<Pressable style={[styles.button, styles.buttonClose]} onPress={() => setModalVisible(!modalVisible)}>\r\n\t\t\t\t\t\t\t\t<Text style={styles.textStyle}>Hide Modal</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Text style={{ fontSize: 30, marginBottom: 10 }}>{room.name}</Text>\r\n\t\t\t\t<TouchableOpacity style={{ marginBottom: 10 }} onPress={copyToClipboard}>\r\n\t\t\t\t\t<Text>URL </Text>\r\n\t\t\t\t\t<TextInput editable={false} style={styles.input} value={url} />\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t<Text style={{ marginBottom: 10 }}>Last generated number </Text>\r\n\t\t\t\t<TextInput editable={false} style={styles.input} value={room.lastNumber.toString()} />\r\n\t\t\t\t<View style={{ marginTop: 10 }}>\r\n\t\t\t\t\t<Text>Current Number: </Text>\r\n\t\t\t\t\t<View style={{ flexDirection: \"row\", marginTop: 10 }}>\r\n\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={subtraction}>\r\n\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>-</Text>\r\n\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t<TextInput style={styles.setValueInput} value={value.toString()} editable={false} />\r\n\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={addition}>\r\n\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>+</Text>\r\n\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Emit = () => {\r\n\tconst user = useContext(AppContext);\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/room/user/company/\" + companyId, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ user: user.user }),\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t{rooms.map((room) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<View key={room.id} style={styles.cardContainer}>\r\n\t\t\t\t\t\t<Room room={room} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcenteredView: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginTop: 22,\r\n\t},\r\n\tmodalView: {\r\n\t\tmargin: 20,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpadding: 35,\r\n\t\talignItems: \"center\",\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2,\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5,\r\n\t},\r\n\tbutton: {\r\n\t\tborderRadius: 20,\r\n\t\tpadding: 10,\r\n\t\televation: 2,\r\n\t},\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tmaxWidth: 480,\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\troomContainer: {\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: \"#CCCCCC\",\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\tsetValueInput: {\r\n\t\twidth: 80,\r\n\t\theight: 40,\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: 14,\r\n\t},\r\n\tsetValueButton: {\r\n\t\tbackgroundColor: \"#43D95D\",\r\n\t\theight: 40,\r\n\t\twidth: 40,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Emit;\r\n"]},"metadata":{},"sourceType":"module"}