{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport { AUTH, host } from \"./Constants\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { AppContext } from \"./context\";\nimport NavigationTab from \"./components/NavigationTab\";\nimport LoginPage from \"./components/authentication/LoginPage\";\nimport { ToastProvider } from \"react-native-toast-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var userAdditionalInfo = function userAdditionalInfo(email) {\n    var response, result;\n    return _regeneratorRuntime.async(function userAdditionalInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(host + \"/user/email/\" + email));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(onAuthStateChanged(AUTH, function _callee(user) {\n    var additional;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!user) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(userAdditionalInfo(user.email));\n\n          case 3:\n            additional = _context2.sent;\n            user.role = \"admin\";\n            setUser(user);\n            _context2.next = 9;\n            break;\n\n          case 8:\n            setUser(false);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }), []);\n  return _jsx(ToastProvider, {\n    children: _jsx(AppContext.Provider, {\n      value: {\n        user: user\n      },\n      children: user ? _jsx(NavigationTab, {}) : _jsx(LoginPage, {\n        setUser: setUser\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["useEffect","useState","AUTH","host","onAuthStateChanged","AppContext","NavigationTab","LoginPage","ToastProvider","App","user","setUser","userAdditionalInfo","email","fetch","response","json","result","additional","role"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,IAAf;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,UAAT;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,SAASC,aAAT,QAA8B,kCAA9B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC7B,kBAAwBR,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACHC,KAAK,CAACX,IAAI,GAAG,cAAP,GAAwBU,KAAzB,CADF;;AAAA;AACpBE,YAAAA,QADoB;AAAA;AAAA,6CAELA,QAAQ,CAACC,IAAT,EAFK;;AAAA;AAEpBC,YAAAA,MAFoB;AAAA,6CAGnBA,MAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAKAjB,EAAAA,SAAS,CACRI,kBAAkB,CAACF,IAAD,EAAO,iBAAOQ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACpBA,IADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEAE,kBAAkB,CAACF,IAAI,CAACG,KAAN,CAFlB;;AAAA;AAEnBK,YAAAA,UAFmB;AAGvBR,YAAAA,IAAI,CAACS,IAAL,GAAY,OAAZ;AACAR,YAAAA,OAAO,CAACD,IAAD,CAAP;AAJuB;AAAA;;AAAA;AAMvBC,YAAAA,OAAO,CAAC,KAAD,CAAP;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP,CADV,EAUR,EAVQ,CAAT;AAaA,SACC,KAAC,aAAD;AAAA,cACC,KAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAA5B;AAAA,gBACEA,IAAI,GAAG,KAAC,aAAD,KAAH,GAAuB,KAAC,SAAD;AAAW,QAAA,OAAO,EAAEC;AAApB;AAD7B;AADD,IADD;AAOA","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { AUTH, host } from \"./Constants\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { AppContext } from \"./context\";\r\nimport NavigationTab from \"./components/NavigationTab\";\r\nimport LoginPage from \"./components/authentication/LoginPage\";\r\nimport { ToastProvider } from \"react-native-toast-notifications\";\r\n\r\nexport default function App() {\r\n\tconst [user, setUser] = useState(null);\r\n\tconst userAdditionalInfo = async (email) => {\r\n\t\tconst response = await fetch(host + \"/user/email/\" + email);\r\n\t\tconst result = await response.json();\r\n\t\treturn result;\r\n\t};\r\n\tuseEffect(\r\n\t\tonAuthStateChanged(AUTH, async (user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tlet additional = await userAdditionalInfo(user.email);\r\n\t\t\t\tuser.role = \"admin\";\r\n\t\t\t\tsetUser(user);\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(false);\r\n\t\t\t}\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ToastProvider>\r\n\t\t\t<AppContext.Provider value={{ user }}>\r\n\t\t\t\t{user ? <NavigationTab /> : <LoginPage setUser={setUser} />}\r\n\t\t\t</AppContext.Provider>\r\n\t\t</ToastProvider>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}