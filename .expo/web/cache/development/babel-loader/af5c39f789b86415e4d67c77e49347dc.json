{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useEffect, useState } from \"react\";\nimport { host } from \"../../Constants\";\nimport Company from \"./Company\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Admin = function Admin(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var companyID = route.params.id;\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: _jsx(Company, {\n      companyID: companyID\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Admin;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Admin.js"],"names":["useEffect","useState","host","Company","Admin","route","navigation","companyID","params","id","alignItems","styles","StyleSheet","create","cardContainer","width","maxWidth","backgroundColor","padding","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","input","borderWidth","sendButton","justifyContent"],"mappings":";;;;;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT;AACA,OAAOC,OAAP;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACxC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA/B;AAoCA,SACC,KAAC,UAAD;AAAY,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAnC;AAAA,cACC,KAAC,OAAD;AAAS,MAAA,SAAS,EAAEH;AAApB;AADD,IADD;AA4BA,CAjED;;AAmEA,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,aAAa,EAAE;AACdC,IAAAA,KAAK,EAAE,KADO;AAEdC,IAAAA,QAAQ,EAAE,GAFI;AAGdC,IAAAA,eAAe,EAAE,OAHH;AAIdC,IAAAA,OAAO,EAAE,EAJK;AAKdC,IAAAA,MAAM,EAAE,EALM;AAMdC,IAAAA,WAAW,EAAE,MANC;AAOdC,IAAAA,YAAY,EAAE;AACbN,MAAAA,KAAK,EAAE,CADM;AAEbO,MAAAA,MAAM,EAAE;AAFK,KAPA;AAWdC,IAAAA,aAAa,EAAE,IAXD;AAYdC,IAAAA,YAAY,EAAE,IAZA;AAadC,IAAAA,SAAS,EAAE,EAbG;AAcdC,IAAAA,YAAY,EAAE;AAdA,GADiB;AAiBhCC,EAAAA,KAAK,EAAE;AACNZ,IAAAA,KAAK,EAAE,KADD;AAENO,IAAAA,MAAM,EAAE,EAFF;AAGNM,IAAAA,WAAW,EAAE,CAHP;AAINF,IAAAA,YAAY,EAAE;AAJR,GAjByB;AAuBhCG,EAAAA,UAAU,EAAE;AACXZ,IAAAA,eAAe,EAAE,OADN;AAEXS,IAAAA,YAAY,EAAE,CAFH;AAGXJ,IAAAA,MAAM,EAAE,EAHG;AAIXP,IAAAA,KAAK,EAAE,EAJI;AAKXL,IAAAA,UAAU,EAAE,QALD;AAMXoB,IAAAA,cAAc,EAAE;AANL;AAvBoB,CAAlB,CAAf;AAgCA,eAAe1B,KAAf","sourcesContent":["import { Text, View, StyleSheet, TextInput, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { host } from \"../../Constants\";\r\nimport Company from \"./Company\";\r\n\r\nconst Admin = ({ route, navigation }) => {\r\n\tconst companyID = route.params.id;\r\n\t// const [company, setCompany] = useState({ id: \"\", name: \"\", slug: \"\" });\r\n\r\n\t// const getCompanies = async () => {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch(host + \"/company/\" + companyID, {\r\n\t// \t\t\tmethod: \"GET\",\r\n\t// \t\t\tcredentials: \"include\",\r\n\t// \t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t// \t\t});\r\n\t// \t\treturn await response.json();\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(error);\r\n\t// \t}\r\n\t// };\r\n\r\n\t// useEffect(async () => {\r\n\t// \tconst co = await getCompanies();\r\n\t// \tsetCompany({ ...company, id: companyID, name: co.name, slug: co.slug });\r\n\t// }, []);\r\n\r\n\t// const updateCompany = async () => {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch(host + \"/company/\" + companyID, {\r\n\t// \t\t\tmethod: \"POST\",\r\n\t// \t\t\tcredentials: \"include\",\r\n\t// \t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t// \t\t\tbody: JSON.stringify(company),\r\n\t// \t\t});\r\n\t// \t\talert(\"done\");\r\n\t// \t\treturn await response.json();\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(error);\r\n\t// \t}\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t<Company companyID={companyID} />\r\n\t\t\t{/* <View style={styles.cardContainer}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n\t\t\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Company Name</Text>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tvalue={company.name}\r\n\t\t\t\t\t\tonChangeText={(v) => setCompany({ ...company, name: v })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n\t\t\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Slug</Text>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tvalue={company.slug}\r\n\t\t\t\t\t\tonChangeText={(v) => setCompany({ ...company, slug: v })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t<TouchableOpacity style={styles.sendButton} onPress={updateCompany}>\r\n\t\t\t\t\t\t<Text style={{ color: \"white\" }}>Save</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</View> */}\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}