{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { initializeApp } from \"firebase/app\";\nimport { FIREBASE_CONFIG } from \"./Constants\";\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport NavigationTab from \"./components/NavigationTab\";\nvar firebaseApp = initializeApp(FIREBASE_CONFIG);\nvar auth = getAuth();\nimport { createContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AppContext = createContext();\n\nvar LoginPage = function LoginPage(_ref) {\n  var setUser = _ref.setUser;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pass = _useState4[0],\n      setPass = _useState4[1];\n\n  var logIn = function logIn() {\n    signInWithEmailAndPassword(auth, email, pass).then(function (userCredential) {\n      var user = userCredential.user;\n      setUser(user);\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"email\"\n    }), _jsx(TextInput, {\n      style: {\n        borderStyle: \"solid\",\n        borderBottomWidth: 1\n      },\n      onChangeText: setEmail\n    }), _jsx(Text, {\n      children: \"password\"\n    }), _jsx(TextInput, {\n      style: {\n        borderStyle: \"solid\",\n        borderBottomWidth: 1\n      },\n      onChangeText: setPass\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: logIn\n    })]\n  });\n};\n\nvar Welcome = function Welcome() {\n  var logout = function logout() {\n    signOut(auth).then(function () {\n      console.log(\"signed out\");\n      setUser(false);\n    }).catch(function (error) {\n      console.log(\"failed signout\");\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"welcome\"\n    }), _jsx(Button, {\n      title: \"logout\",\n      onPress: logout\n    })]\n  });\n};\n\nexport default function App() {\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  useEffect(onAuthStateChanged(auth, function (user) {\n    console.log(user);\n\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(false);\n      console.log(\"not loggedin\");\n    }\n  }), []);\n  return _jsx(AppContext.Provider, {\n    children: user ? _jsx(NavigationTab, {}) : _jsx(LoginPage, {\n      setUser: setUser\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["useEffect","useState","initializeApp","FIREBASE_CONFIG","getAuth","signInWithEmailAndPassword","onAuthStateChanged","signOut","NavigationTab","firebaseApp","auth","createContext","AppContext","LoginPage","setUser","email","setEmail","pass","setPass","logIn","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","console","log","borderStyle","borderBottomWidth","Welcome","logout","App"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, Text, TextInput, Button } from \"react-native\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { FIREBASE_CONFIG } from \"./Constants\";\r\nimport { getAuth, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport NavigationTab from \"./components/NavigationTab\";\r\nconst firebaseApp = initializeApp(FIREBASE_CONFIG);\r\nconst auth = getAuth();\r\n\r\nimport { createContext } from \"react\";\r\nconst AppContext = createContext();\r\n\r\nconst LoginPage = ({ setUser }) => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [pass, setPass] = useState(\"\");\r\n\r\n\tconst logIn = () => {\r\n\t\tsignInWithEmailAndPassword(auth, email, pass)\r\n\t\t\t.then((userCredential) => {\r\n\t\t\t\tconst user = userCredential.user;\r\n\t\t\t\tsetUser(user);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorCode = error.code;\r\n\t\t\t\tconst errorMessage = error.message;\r\n\t\t\t\tconsole.log(errorMessage);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text>email</Text>\r\n\t\t\t<TextInput style={{ borderStyle: \"solid\", borderBottomWidth: 1 }} onChangeText={setEmail}></TextInput>\r\n\t\t\t<Text>password</Text>\r\n\t\t\t<TextInput style={{ borderStyle: \"solid\", borderBottomWidth: 1 }} onChangeText={setPass}></TextInput>\r\n\t\t\t<Button title=\"Send\" onPress={logIn} />\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Welcome = () => {\r\n\tconst logout = () => {\r\n\t\tsignOut(auth)\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log(\"signed out\");\r\n\t\t\t\tsetUser(false);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(\"failed signout\");\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text>welcome</Text>\r\n\t\t\t<Button title=\"logout\" onPress={logout} />\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default function App() {\r\n\tconst [user, setUser] = useState(null);\r\n\r\n\tuseEffect(\r\n\t\tonAuthStateChanged(auth, (user) => {\r\n\t\t\tconsole.log(user);\r\n\t\t\tif (user) {\r\n\t\t\t\tsetUser(user);\r\n\t\t\t\t// ...\r\n\t\t\t} else {\r\n\t\t\t\tsetUser(false);\r\n\t\t\t\tconsole.log(\"not loggedin\");\r\n\t\t\t}\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\t// return <>{authenticated.ok === true ? <NavigationTab /> : <LoginPage setAuthenticated={setAuthenticated} />}</>;\r\n\t// return <NavigationTab />\r\n\treturn <AppContext.Provider>{user ? <NavigationTab /> : <LoginPage setUser={setUser} />}</AppContext.Provider>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}