{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { login } from \"../../Utils\";\nimport AuthLogin from \"./AuthLogin\";\nimport Rooms from \"./Rooms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AdminRooms = function AdminRooms() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  var checkLogin = function checkLogin() {\n    var response, json;\n    return _regeneratorRuntime.async(function checkLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/auth/loggeduser\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n            console.log(json);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(json.ok);\n\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    return setAuthenticated(checkLogin());\n  }, []);\n  return _jsx(Rooms, {});\n};\n\nexport default AdminRooms;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AdminRooms.js"],"names":["useEffect","useState","login","AuthLogin","Rooms","AdminRooms","authenticated","setAuthenticated","checkLogin","fetch","response","json","console","log","ok"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,KAAT;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,kBAA0CJ,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOK,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKC,KAAK,CAAC,uCAAD,CADV;;AAAA;AACZC,YAAAA,QADY;AAAA;AAAA,6CAECA,QAAQ,CAACC,IAAT,EAFD;;AAAA;AAEZA,YAAAA,IAFY;AAGlBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHkB;AAAA,6CAILA,IAAI,CAACG,EAJA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOAd,EAAAA,SAAS,CAAC;AAAA,WAAMO,gBAAgB,CAACC,UAAU,EAAX,CAAtB;AAAA,GAAD,EAAuC,EAAvC,CAAT;AAKA,SAAO,KAAC,KAAD,KAAP;AACA,CAfD;;AAiBA,eAAeH,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { login } from \"../../Utils\";\r\nimport AuthLogin from \"./AuthLogin\";\r\nimport Rooms from \"./Rooms\";\r\n\r\nconst AdminRooms = () => {\r\n\tconst [authenticated, setAuthenticated] = useState(\"\");\r\n\tconst checkLogin = async () => {\r\n\t\tconst response = await fetch(\"http://localhost:3000/auth/loggeduser\");\r\n\t\tconst json = await response.json();\r\n\t\tconsole.log(json);\r\n\t\treturn await json.ok;\r\n\t};\r\n\r\n\tuseEffect(() => setAuthenticated(checkLogin()), []);\r\n\r\n\t// console.log(authenticated);\r\n\r\n\t// return <View>{authenticated ? <Rooms /> : <AuthLogin setAuthenticated={setAuthenticated} />}</View>;\r\n\treturn <Rooms />;\r\n};\r\n\r\nexport default AdminRooms;\r\n"]},"metadata":{},"sourceType":"module"}