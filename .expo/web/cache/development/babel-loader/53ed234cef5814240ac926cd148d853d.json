{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { useState } from \"react\";\nimport Companies from \"./admin/Companies\";\nimport Rooms from \"./admin/Rooms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Settings = function Settings() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCompany = _useState2[0],\n      setSelectedCompany = _useState2[1];\n\n  return _jsxs(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        margin: 10,\n        width: \"20%\"\n      },\n      children: \"Select a company\"\n    }), _jsx(Picker, {\n      style: styles.input,\n      selectedValue: selectedCompany,\n      onValueChange: function onValueChange(itemValue, itemIndex) {\n        return setSelectedCompany(itemValue);\n      },\n      children: _jsx(Picker.Item, {\n        label: \"Select a company\",\n        value: \"\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Settings;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Settings.js"],"names":["Picker","useState","Companies","Rooms","Settings","selectedCompany","setSelectedCompany","alignItems","justifyContent","margin","width","styles","input","itemValue","itemIndex","StyleSheet","create","cardContainer","maxWidth","backgroundColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth","sendButton"],"mappings":";;;;;;;AACA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,kBAA8CH,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOI,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,SAKC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,cAAc,EAAE;AAAxC,KAAb;AAAA,eACC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAb;AAAA;AAAA,MADD,EAEC,KAAC,MAAD;AACC,MAAA,KAAK,EAAEC,MAAM,CAACC,KADf;AAEC,MAAA,aAAa,EAAEP,eAFhB;AAGC,MAAA,aAAa,EAAE,uBAACQ,SAAD,EAAYC,SAAZ;AAAA,eAA0BR,kBAAkB,CAACO,SAAD,CAA5C;AAAA,OAHhB;AAAA,gBAKC,KAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAC,kBAAnB;AAAsC,QAAA,KAAK,EAAC;AAA5C;AALD,MAFD;AAAA,IALD;AAmBA,CAtBD;;AAwBA,IAAMF,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,aAAa,EAAE;AACdP,IAAAA,KAAK,EAAE,KADO;AAEdQ,IAAAA,QAAQ,EAAE,GAFI;AAGdC,IAAAA,eAAe,EAAE,OAHH;AAIdC,IAAAA,OAAO,EAAE,EAJK;AAKdX,IAAAA,MAAM,EAAE,EALM;AAMdY,IAAAA,WAAW,EAAE,MANC;AAOdC,IAAAA,YAAY,EAAE;AACbZ,MAAAA,KAAK,EAAE,CADM;AAEba,MAAAA,MAAM,EAAE;AAFK,KAPA;AAWdC,IAAAA,aAAa,EAAE,IAXD;AAYdC,IAAAA,YAAY,EAAE,IAZA;AAadC,IAAAA,SAAS,EAAE,EAbG;AAcdC,IAAAA,YAAY,EAAE;AAdA,GADiB;AAiBhCf,EAAAA,KAAK,EAAE;AACNF,IAAAA,KAAK,EAAE,KADD;AAENa,IAAAA,MAAM,EAAE,EAFF;AAGNK,IAAAA,WAAW,EAAE,CAHP;AAIND,IAAAA,YAAY,EAAE;AAJR,GAjByB;AAuBhCE,EAAAA,UAAU,EAAE;AACXV,IAAAA,eAAe,EAAE,OADN;AAEXQ,IAAAA,YAAY,EAAE,CAFH;AAGXJ,IAAAA,MAAM,EAAE,EAHG;AAIXb,IAAAA,KAAK,EAAE,EAJI;AAKXH,IAAAA,UAAU,EAAE,QALD;AAMXC,IAAAA,cAAc,EAAE;AANL;AAvBoB,CAAlB,CAAf;AAiCA,eAAeJ,QAAf","sourcesContent":["import { Text, View, StyleSheet, ScrollView, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { useState } from \"react\";\r\nimport Companies from \"./admin/Companies\";\r\nimport Rooms from \"./admin/Rooms\";\r\n\r\nconst Settings = () => {\r\n\tconst [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t// <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t// \t<Companies />\r\n\t\t// \t<Rooms />\r\n\t\t// </ScrollView>\r\n\t\t<View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Select a company</Text>\r\n\t\t\t<Picker\r\n\t\t\t\tstyle={styles.input}\r\n\t\t\t\tselectedValue={selectedCompany}\r\n\t\t\t\tonValueChange={(itemValue, itemIndex) => setSelectedCompany(itemValue)}\r\n\t\t\t>\r\n\t\t\t\t<Picker.Item label=\"Select a company\" value=\"\" />\r\n\t\t\t\t{/* {companies.map((item) => (\r\n\t\t\t\t\t\t<Picker.Item key={item.id} label={item.name} value={item.slug} />\r\n\t\t\t\t\t))} */}\r\n\t\t\t</Picker>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}