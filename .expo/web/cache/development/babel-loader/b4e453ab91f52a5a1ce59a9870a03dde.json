{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect, useState } from \"react\";\nimport { host } from \"../../Constants\";\nimport Companies from \"./admin/Companies\";\nimport Rooms from \"./admin/Rooms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Settings = function Settings() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      companies = _useState2[0],\n      setCompanies = _useState2[1];\n\n  var url = host + \"/company/byemail\";\n  var headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n\n  var getCompanies = function getCompanies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getCompanies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"GET\",\n              credentials: \"include\",\n              headers: headers\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setCompanies(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error, somenthing happened\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    return getCompanies();\n  }, []);\n  return _jsxs(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: [_jsx(Companies, {\n      companies: companies\n    }), _jsx(Rooms, {})]\n  });\n};\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Settings.js"],"names":["useEffect","useState","host","Companies","Rooms","Settings","companies","setCompanies","url","headers","Accept","getCompanies","fetch","method","credentials","response","json","console","log","alignItems"],"mappings":";;;;;;;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT;AAEA,OAAOC,SAAP;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,kBAAkCJ,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,GAAG,GAAGN,IAAI,GAAG,kBAAnB;AACA,MAAMO,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,kBAAV;AAA8B,oBAAgB;AAA9C,GAAhB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEIC,KAAK,CAACJ,GAAD,EAAM;AAAEK,cAAAA,MAAM,EAAE,KAAV;AAAiBC,cAAAA,WAAW,EAAE,SAA9B;AAAyCL,cAAAA,OAAO,EAAEA;AAAlD,aAAN,CAFT;;AAAA;AAEbM,YAAAA,QAFa;AAAA;AAAA,6CAGAA,QAAQ,CAACC,IAAT,EAHA;;AAAA;AAGbA,YAAAA,IAHa;AAInBT,YAAAA,YAAY,CAACS,IAAD,CAAZ;AAJmB;AAAA;;AAAA;AAAA;AAAA;AAMnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAUAlB,EAAAA,SAAS,CAAC;AAAA,WAAMW,YAAY,EAAlB;AAAA,GAAD,EAAuB,EAAvB,CAAT;AAEA,SACC,MAAC,UAAD;AAAY,IAAA,qBAAqB,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd,KAAnC;AAAA,eACC,KAAC,SAAD;AAAW,MAAA,SAAS,EAAEb;AAAtB,MADD,EAEC,KAAC,KAAD,KAFD;AAAA,IADD;AAMA,CAvBD;;AAyBA,eAAeD,QAAf","sourcesContent":["import { Text, View, StyleSheet, ScrollView, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { host } from \"../../Constants\";\r\n\r\nimport Companies from \"./admin/Companies\";\r\nimport Rooms from \"./admin/Rooms\";\r\n\r\nconst Settings = () => {\r\n\tconst [companies, setCompanies] = useState([]);\r\n\r\n\tconst url = host + \"/company/byemail\";\r\n\tconst headers = { Accept: \"application/json\", \"Content-Type\": \"application/json\" };\r\n\tconst getCompanies = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method: \"GET\", credentials: \"include\", headers: headers });\r\n\t\t\tconst json = await response.json();\r\n\t\t\tsetCompanies(json);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error, somenthing happened\");\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => getCompanies(), []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t<Companies companies={companies} />\r\n\t\t\t<Rooms />\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}