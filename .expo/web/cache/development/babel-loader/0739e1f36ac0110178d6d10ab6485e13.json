{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useEffect, useState } from \"react\";\nimport AuthLogin from \"./components/admin/AuthLogin\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar Welcome = function Welcome(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Choose a Room\"\n    }), _jsx(TouchableOpacity, {\n      style: {\n        alignItems: \"center\",\n        backgroundColor: \"#DDDDDD\",\n        padding: 10,\n        margin: 10\n      },\n      onPress: function onPress() {\n        navigation.navigate(\"/admin\");\n      },\n      children: _jsx(Text, {\n        children: \"Admin Rooms\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        alignItems: \"center\",\n        backgroundColor: \"#DDDDDD\",\n        padding: 10,\n        margin: 10\n      },\n      onPress: function onPress() {\n        navigation.navigate(\"/room\", {\n          room: 1\n        });\n      },\n      children: _jsx(Text, {\n        children: \"Go to room 1\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        alignItems: \"center\",\n        backgroundColor: \"#DDDDDD\",\n        padding: 10,\n        margin: 10\n      },\n      onPress: function onPress() {\n        navigation.navigate(\"/room\", {\n          room: 2\n        });\n      },\n      children: _jsx(Text, {\n        children: \"Go to room 2\"\n      })\n    })]\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isloggedIn = _useState2[0],\n      setIsloggedIn = _useState2[1];\n\n  var authenticate = function authenticate() {\n    var response, json;\n    return _regeneratorRuntime.async(function authenticate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/auth/loggeduser\", {\n              method: \"GET\",\n              credentials: \"include\"\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setIsloggedIn(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    authenticate();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n                color = _ref3.color,\n                size = _ref3.size;\n            var iconName;\n            if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: isloggedIn.ok === true ? _jsxs(_Fragment, {\n        children: [_jsx(Tab.Screen, {\n          name: \"/\",\n          component: AdminRooms,\n          options: {\n            title: \"AdminRooms\"\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"/settings\",\n          component: Settings,\n          options: {\n            title: \"Settings\"\n          }\n        })]\n      }) : _jsx(Tab.Screen, {\n        name: \"/login\",\n        component: AuthLogin\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["NavigationContainer","AdminRooms","createBottomTabNavigator","Settings","Ionicons","useEffect","useState","AuthLogin","Tab","Welcome","navigation","justifyContent","alignItems","backgroundColor","padding","margin","navigate","room","App","isloggedIn","setIsloggedIn","authenticate","fetch","host","method","credentials","response","json","console","log","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","ok","title","styles","StyleSheet","create","container","flex"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AdminRooms from \"./components/admin/AdminRooms\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Settings from \"./components/Settings\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { useEffect, useState } from \"react\";\nimport AuthLogin from \"./components/admin/AuthLogin\";\n\nconst Tab = createBottomTabNavigator();\n\nconst Welcome = ({ navigation }) => {\n\treturn (\n\t\t<View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n\t\t\t<Text>Choose a Room</Text>\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={{ alignItems: \"center\", backgroundColor: \"#DDDDDD\", padding: 10, margin: 10 }}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tnavigation.navigate(\"/admin\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text>Admin Rooms</Text>\n\t\t\t</TouchableOpacity>\n\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={{ alignItems: \"center\", backgroundColor: \"#DDDDDD\", padding: 10, margin: 10 }}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tnavigation.navigate(\"/room\", { room: 1 });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text>Go to room 1</Text>\n\t\t\t</TouchableOpacity>\n\n\t\t\t<TouchableOpacity\n\t\t\t\tstyle={{ alignItems: \"center\", backgroundColor: \"#DDDDDD\", padding: 10, margin: 10 }}\n\t\t\t\tonPress={() => {\n\t\t\t\t\tnavigation.navigate(\"/room\", { room: 2 });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text>Go to room 2</Text>\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n};\n\nexport default function App() {\n\tconst [isloggedIn, setIsloggedIn] = useState(false);\n\n\tconst authenticate = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(host + \"/auth/loggeduser\", {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tcredentials: \"include\",\n\t\t\t});\n\t\t\tconst json = await response.json();\n\t\t\tsetIsloggedIn(json);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tauthenticate();\n\t}, []);\n\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Tab.Navigator\n\t\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\t\tlet iconName;\n\t\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\n\t\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\n\t\t\t\t\t\t// You can return any component that you like here!\n\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\n\t\t\t\t\t},\n\t\t\t\t\ttabBarActiveTintColor: \"green\",\n\t\t\t\t\ttabBarInactiveTintColor: \"gray\",\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{isloggedIn.ok === true ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Tab.Screen name=\"/\" component={AdminRooms} options={{ title: \"AdminRooms\" }} />\n\t\t\t\t\t\t<Tab.Screen name=\"/settings\" component={Settings} options={{ title: \"Settings\" }} />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Tab.Screen name=\"/login\" component={AuthLogin} />\n\t\t\t\t)}\n\n\t\t\t\t{/* <Tab.Screen name=\"/room\" component={Client} options={({ route }) => ({ title: \"route.params.name\" })} />\n\t\t\t\t<Tab.Screen name=\"/admin\" component={AdminRooms} options={{ title: \"Rooms Admin\" }} />\n\t\t\t\t<Tab.Screen name=\"/mainmenu\" component={MainMenu} options={{ title: \"Main Menu\" }} />\n\t\t\t\t */}\n\t\t\t</Tab.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}