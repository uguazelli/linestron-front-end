{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Clipboard from \"@react-native-clipboard/clipboard\";\nimport { AppContext } from \"../context\";\nimport { io } from \"socket.io-client\";\nimport { host } from \"../Constants\";\nimport { hostSocketIO } from \"../Constants\";\nvar socket = io(hostSocketIO);\nimport { useToast } from \"react-native-toast-notifications\";\nimport QRCode from \"react-native-qrcode-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Room = function Room(_ref) {\n  var r = _ref.r;\n\n  var _useState = useState(r),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var toast = useToast();\n  var url = \"http://\" + hostSocketIO + \"/company/\" + room.companySlug + \"/room/\" + room.unique_name;\n\n  var _useState3 = useState(\"\" + room.prefix + room.currentNumber),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      qrmodalVisible = _useState6[0],\n      setQrModalVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      resetModalVisible = _useState8[0],\n      setResetModalVisible = _useState8[1];\n\n  var roomName = room.companySlug + \"_\" + room.unique_name;\n\n  var copyToClipboard = function copyToClipboard() {\n    toast.show(\"Copied to clipboard\", {\n      placement: \"top\"\n    });\n    Clipboard.setString(url);\n  };\n\n  var addition = function addition() {\n    return setValue(value + 1);\n  };\n\n  var subtraction = function subtraction() {\n    return setValue(value - 1);\n  };\n\n  var emitValue = function emitValue() {\n    var response;\n    return _regeneratorRuntime.async(function emitValue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.unique_name + \"/current\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                number: value\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            socket.emit(\"emmitToRoom\", {\n              room: roomName,\n              value: value\n            });\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var resetRoom = function resetRoom() {\n    var response;\n    return _regeneratorRuntime.async(function resetRoom$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.id, {\n              method: \"PUT\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            response = _context2.sent;\n            setRoom(_objectSpread(_objectSpread({}, room), {}, {\n              lastNumber: 0\n            }));\n            setValue(0);\n            setResetModalVisible(!resetModalVisible);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(emitValue, [value]);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.roomContainer,\n      children: [_jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: qrmodalVisible,\n        onRequestClose: function onRequestClose() {\n          setQrModalVisible(!qrmodalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(View, {\n              style: {\n                marginBottom: 30\n              },\n              children: _jsx(QRCode, {\n                value: url,\n                size: 300\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return setQrModalVisible(!qrmodalVisible);\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontSize: 20,\n                  color: \"red\"\n                },\n                children: \"Close\"\n              })\n            })]\n          })\n        })\n      }), _jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: resetModalVisible,\n        onRequestClose: function onRequestClose() {\n          setResetModalVisible(!resetModalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsxs(View, {\n              style: {\n                marginBottom: 30\n              },\n              children: [_jsx(Text, {\n                children: \"Are you sure you want to reset?\"\n              }), _jsx(Text, {\n                children: \"The current number will be set to zero\"\n              }), _jsx(Text, {\n                children: \"Please make sure there is no numbers not attendend\"\n              })]\n            }), _jsxs(View, {\n              style: {\n                width: \"100%\",\n                flexDirection: \"row\",\n                justifyContent: \"space-around\"\n              },\n              children: [_jsx(Pressable, {\n                onPress: function onPress() {\n                  return setResetModalVisible(!resetModalVisible);\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 20\n                  },\n                  children: \"Cancel\"\n                })\n              }), _jsx(Pressable, {\n                onPress: resetRoom,\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 20,\n                    color: \"red\"\n                  },\n                  children: \"Confirm\"\n                })\n              })]\n            })]\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          marginBottom: 30\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 30,\n            marginBottom: 10\n          },\n          children: room.name\n        }), _jsxs(TouchableOpacity, {\n          style: {\n            marginBottom: 10\n          },\n          onPress: copyToClipboard,\n          children: [_jsx(Text, {\n            children: \"URL\"\n          }), _jsx(TextInput, {\n            editable: false,\n            style: styles.input,\n            value: url\n          })]\n        }), _jsx(View, {\n          style: {\n            width: \"100%\",\n            alignItems: \"flex-end\"\n          },\n          children: _jsx(Pressable, {\n            style: styles.sendButton,\n            onPress: function onPress() {\n              return setQrModalVisible(true);\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\"\n              },\n              children: \"Show QR\"\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          marginBottom: 30\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 10\n          },\n          children: \"Last generated number \"\n        }), _jsx(TextInput, {\n          editable: false,\n          style: styles.input,\n          value: \"\" + room.prefix + room.lastNumber.toString()\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row-reverse\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: [_jsx(Text, {\n            style: {\n              marginBottom: 10\n            },\n            children: \"Reset Room Numbers\"\n          }), _jsx(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: \"row-reverse\"\n            },\n            children: _jsx(Pressable, {\n              style: [styles.sendButton, {\n                backgroundColor: \"red\"\n              }],\n              onPress: function onPress() {\n                return setResetModalVisible(true);\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"Reset\"\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"Current Number: \"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 10\n            },\n            children: [_jsx(TouchableOpacity, {\n              style: styles.setValueButton,\n              onPress: subtraction,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"-\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.setValueInput,\n              value: value.toString(),\n              editable: false\n            }), _jsx(TouchableOpacity, {\n              style: styles.setValueButton,\n              onPress: addition,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"+\"\n              })\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar Emit = function Emit() {\n  var user = useContext(AppContext);\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rooms = _useState10[0],\n      setRooms = _useState10[1];\n\n  var getRooms = function getRooms() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getRooms$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/user/company/\" + companyId, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user.user\n              })\n            }));\n\n          case 6:\n            response = _context3.sent;\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context4.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: rooms.map(function (r) {\n      return _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsx(Room, {\n          r: r\n        })\n      }, r.id);\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  cardContainer: {\n    width: \"95%\",\n    backgroundColor: \"#fff\",\n    maxWidth: 480,\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  roomContainer: {\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#CCCCCC\",\n    backgroundColor: \"#F2F2F2\",\n    paddingLeft: 10\n  },\n  setValueInput: {\n    width: 80,\n    height: 40,\n    backgroundColor: \"#F2F2F2\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  setValueButton: {\n    backgroundColor: \"#43D95D\",\n    height: 40,\n    width: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  sendButton: {\n    backgroundColor: \"#41BAEE\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Emit;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Emit.js"],"names":["useContext","useEffect","useState","AsyncStorage","Clipboard","AppContext","io","host","hostSocketIO","socket","useToast","QRCode","Room","r","room","setRoom","toast","url","companySlug","unique_name","prefix","currentNumber","value","setValue","qrmodalVisible","setQrModalVisible","resetModalVisible","setResetModalVisible","roomName","copyToClipboard","show","placement","setString","addition","subtraction","emitValue","fetch","method","headers","Accept","body","JSON","stringify","number","response","emit","json","console","log","resetRoom","id","lastNumber","styles","roomContainer","centeredView","modalView","marginBottom","fontSize","color","width","flexDirection","justifyContent","name","input","alignItems","sendButton","toString","marginLeft","backgroundColor","marginTop","setValueButton","setValueInput","Emit","user","rooms","setRooms","getRooms","getItem","companyId","map","cardContainer","StyleSheet","create","flex","margin","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","maxWidth","borderWidth","borderColor","paddingLeft","textAlign"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tScrollView,\r\n\tStyleSheet,\r\n\tText,\r\n\tTextInput,\r\n\tTouchableHighlight,\r\n\tTouchableOpacity,\r\n\tView,\r\n\tModal,\r\n\tPressable,\r\n\tAlert,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Clipboard from \"@react-native-clipboard/clipboard\";\r\nimport { AppContext } from \"../context\";\r\nimport { io } from \"socket.io-client\";\r\nimport { host } from \"../Constants\";\r\nimport { hostSocketIO } from \"../Constants\";\r\nconst socket = io(hostSocketIO);\r\n// const socket = io(\"localhost:3000\");\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\n\r\nconst Room = ({ r }) => {\r\n\tconst [room, setRoom] = useState(r);\r\n\tconst toast = useToast();\r\n\tconst url = `http://${hostSocketIO}/company/${room.companySlug}/room/${room.unique_name}`;\r\n\tconst [value, setValue] = useState(`${room.prefix}${room.currentNumber}`);\r\n\tconst [qrmodalVisible, setQrModalVisible] = useState(false);\r\n\tconst [resetModalVisible, setResetModalVisible] = useState(false);\r\n\tconst roomName = room.companySlug + \"_\" + room.unique_name;\r\n\r\n\tconst copyToClipboard = () => {\r\n\t\ttoast.show(\"Copied to clipboard\", {\r\n\t\t\tplacement: \"top\",\r\n\t\t});\r\n\t\tClipboard.setString(url);\r\n\t};\r\n\r\n\tconst addition = () => setValue(value + 1);\r\n\tconst subtraction = () => setValue(value - 1);\r\n\r\n\tconst emitValue = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.unique_name + \"/current\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ number: value }),\r\n\t\t\t});\r\n\r\n\t\t\tsocket.emit(\"emmitToRoom\", { room: roomName, value: value });\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetRoom = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.id, {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t});\r\n\t\t\tsetRoom({ ...room, lastNumber: 0 });\r\n\t\t\tsetValue(0);\r\n\t\t\tsetResetModalVisible(!resetModalVisible);\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(emitValue, [value]);\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={styles.roomContainer}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={qrmodalVisible}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetQrModalVisible(!qrmodalVisible);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={styles.centeredView}>\r\n\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t\t\t\t<QRCode value={url} size={300} />\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<Pressable onPress={() => setQrModalVisible(!qrmodalVisible)}>\r\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20, color: \"red\" }}>Close</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={resetModalVisible}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetResetModalVisible(!resetModalVisible);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={styles.centeredView}>\r\n\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t\t\t\t<Text>Are you sure you want to reset?</Text>\r\n\t\t\t\t\t\t\t\t<Text>The current number will be set to zero</Text>\r\n\t\t\t\t\t\t\t\t<Text>Please make sure there is no numbers not attendend</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t<View style={{ width: \"100%\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={() => setResetModalVisible(!resetModalVisible)}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20 }}>Cancel</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t\t<Pressable onPress={resetRoom}>\r\n\t\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20, color: \"red\" }}>Confirm</Text>\r\n\t\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t<Text style={{ fontSize: 30, marginBottom: 10 }}>{room.name}</Text>\r\n\t\t\t\t\t<TouchableOpacity style={{ marginBottom: 10 }} onPress={copyToClipboard}>\r\n\t\t\t\t\t\t<Text>URL</Text>\r\n\t\t\t\t\t\t<TextInput editable={false} style={styles.input} value={url} />\r\n\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t\t<View style={{ width: \"100%\", alignItems: \"flex-end\" }}>\r\n\t\t\t\t\t\t<Pressable style={styles.sendButton} onPress={() => setQrModalVisible(true)}>\r\n\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>Show QR</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t<Text style={{ marginBottom: 10 }}>Last generated number </Text>\r\n\t\t\t\t\t<TextInput editable={false} style={styles.input} value={`${room.prefix}${room.lastNumber.toString()}`} />\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={{ width: \"100%\", flexDirection: \"row-reverse\" }}>\r\n\t\t\t\t\t<View style={{ marginLeft: 20 }}>\r\n\t\t\t\t\t\t<Text style={{ marginBottom: 10 }}>Reset Room Numbers</Text>\r\n\t\t\t\t\t\t<View style={{ width: \"100%\", flexDirection: \"row-reverse\" }}>\r\n\t\t\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\t\t\tstyle={[styles.sendButton, { backgroundColor: \"red\" }]}\r\n\t\t\t\t\t\t\t\tonPress={() => setResetModalVisible(true)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>Reset</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text>Current Number: </Text>\r\n\t\t\t\t\t\t<View style={{ flexDirection: \"row\", marginTop: 10 }}>\r\n\t\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={subtraction}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>-</Text>\r\n\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t<TextInput style={styles.setValueInput} value={value.toString()} editable={false} />\r\n\t\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={addition}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>+</Text>\r\n\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Emit = () => {\r\n\tconst user = useContext(AppContext);\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/room/user/company/\" + companyId, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ user: user.user }),\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t{rooms.map((r) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<View key={r.id} style={styles.cardContainer}>\r\n\t\t\t\t\t\t<Room r={r} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcenteredView: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginTop: 22,\r\n\t},\r\n\tmodalView: {\r\n\t\tmargin: 20,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpadding: 35,\r\n\t\talignItems: \"center\",\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2,\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5,\r\n\t},\r\n\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tmaxWidth: 480,\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\troomContainer: {\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: \"#CCCCCC\",\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\tsetValueInput: {\r\n\t\twidth: 80,\r\n\t\theight: 40,\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: 14,\r\n\t},\r\n\tsetValueButton: {\r\n\t\tbackgroundColor: \"#43D95D\",\r\n\t\theight: 40,\r\n\t\twidth: 40,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"#41BAEE\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Emit;\r\n"]},"metadata":{},"sourceType":"module"}