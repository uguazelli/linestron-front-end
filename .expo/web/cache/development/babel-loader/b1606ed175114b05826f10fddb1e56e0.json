{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Clipboard from \"@react-native-clipboard/clipboard\";\nimport { AppContext } from \"../context\";\nimport { io } from \"socket.io-client\";\nimport { host } from \"../Constants\";\nimport { hostSocketIO } from \"../Constants\";\nvar socket = io(hostSocketIO);\nimport { useToast } from \"react-native-toast-notifications\";\nimport QRCode from \"react-native-qrcode-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Room = function Room(_ref) {\n  var room = _ref.room;\n  var toast = useToast();\n  var url = \"http://\" + hostSocketIO + \"/company/\" + room.companySlug + \"/room/\" + room.unique_name;\n\n  var _useState = useState(room.currentNumber),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var roomName = room.companySlug + \"_\" + room.unique_name;\n\n  var copyToClipboard = function copyToClipboard() {\n    toast.show(\"Copied to clipboard\", {\n      placement: \"top\"\n    });\n    Clipboard.setString(url);\n  };\n\n  var addition = function addition() {\n    return setValue(value + 1);\n  };\n\n  var subtraction = function subtraction() {\n    return setValue(value - 1);\n  };\n\n  var emitValue = function emitValue() {\n    var response;\n    return _regeneratorRuntime.async(function emitValue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.unique_name + \"/current\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                number: value\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            socket.emit(\"emmitToRoom\", {\n              room: roomName,\n              value: value\n            });\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var resetRoom = function resetRoom() {\n    alert(room.id);\n  };\n\n  useEffect(emitValue, [value]);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.roomContainer,\n      children: [_jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(View, {\n              style: {\n                marginBottom: 30\n              },\n              children: _jsx(QRCode, {\n                value: url,\n                size: 300\n              })\n            }), _jsx(Pressable, {\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsx(Text, {\n                style: {\n                  fontSize: 20,\n                  color: \"red\"\n                },\n                children: \"Close\"\n              })\n            })]\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          marginBottom: 30\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 30,\n            marginBottom: 10\n          },\n          children: room.name\n        }), _jsxs(TouchableOpacity, {\n          style: {\n            marginBottom: 10\n          },\n          onPress: copyToClipboard,\n          children: [_jsx(Text, {\n            children: \"URL\"\n          }), _jsx(TextInput, {\n            editable: false,\n            style: styles.input,\n            value: url\n          })]\n        }), _jsx(View, {\n          style: {\n            width: \"100%\",\n            alignItems: \"flex-end\"\n          },\n          children: _jsx(Pressable, {\n            style: styles.sendButton,\n            onPress: function onPress() {\n              return setModalVisible(true);\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"#fff\"\n              },\n              children: \"Show QR\"\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          marginBottom: 30\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 10\n          },\n          children: \"Last generated number \"\n        }), _jsx(TextInput, {\n          editable: false,\n          style: styles.input,\n          value: room.lastNumber.toString()\n        })]\n      }), _jsxs(View, {\n        style: {\n          width: \"100%\",\n          flexDirection: \"row-reverse\"\n        },\n        children: [_jsxs(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: [_jsx(Text, {\n            style: {\n              marginBottom: 10\n            },\n            children: \"Reset Room Numbers\"\n          }), _jsx(View, {\n            style: {\n              width: \"100%\",\n              flexDirection: \"row-reverse\"\n            },\n            children: _jsx(Pressable, {\n              style: [styles.sendButton, {\n                backgroundColor: \"red\"\n              }],\n              onPress: resetRoom,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"Reset\"\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"Current Number: \"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 10\n            },\n            children: [_jsx(TouchableOpacity, {\n              style: styles.setValueButton,\n              onPress: subtraction,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"-\"\n              })\n            }), _jsx(TextInput, {\n              style: styles.setValueInput,\n              value: value.toString(),\n              editable: false\n            }), _jsx(TouchableOpacity, {\n              style: styles.setValueButton,\n              onPress: addition,\n              children: _jsx(Text, {\n                style: {\n                  color: \"#fff\"\n                },\n                children: \"+\"\n              })\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nvar Emit = function Emit() {\n  var user = useContext(AppContext);\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rooms = _useState6[0],\n      setRooms = _useState6[1];\n\n  var getRooms = function getRooms() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getRooms$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/user/company/\" + companyId, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user.user\n              })\n            }));\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context3.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: rooms.map(function (room) {\n      return _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsx(Room, {\n          room: room\n        })\n      }, room.id);\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  cardContainer: {\n    width: \"95%\",\n    backgroundColor: \"#fff\",\n    maxWidth: 480,\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  roomContainer: {\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#CCCCCC\",\n    backgroundColor: \"#F2F2F2\",\n    paddingLeft: 10\n  },\n  setValueInput: {\n    width: 80,\n    height: 40,\n    backgroundColor: \"#F2F2F2\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  setValueButton: {\n    backgroundColor: \"#43D95D\",\n    height: 40,\n    width: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  sendButton: {\n    backgroundColor: \"#41BAEE\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Emit;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Emit.js"],"names":["useContext","useEffect","useState","AsyncStorage","Clipboard","AppContext","io","host","hostSocketIO","socket","useToast","QRCode","Room","room","toast","url","companySlug","unique_name","currentNumber","value","setValue","modalVisible","setModalVisible","roomName","copyToClipboard","show","placement","setString","addition","subtraction","emitValue","fetch","method","headers","Accept","body","JSON","stringify","number","response","emit","json","console","log","resetRoom","alert","id","styles","roomContainer","centeredView","modalView","marginBottom","fontSize","color","name","input","width","alignItems","sendButton","lastNumber","toString","flexDirection","marginLeft","backgroundColor","marginTop","setValueButton","setValueInput","Emit","user","rooms","setRooms","getRooms","getItem","companyId","r","map","cardContainer","StyleSheet","create","flex","justifyContent","margin","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","maxWidth","borderWidth","borderColor","paddingLeft","textAlign"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tScrollView,\r\n\tStyleSheet,\r\n\tText,\r\n\tTextInput,\r\n\tTouchableHighlight,\r\n\tTouchableOpacity,\r\n\tView,\r\n\tModal,\r\n\tPressable,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Clipboard from \"@react-native-clipboard/clipboard\";\r\nimport { AppContext } from \"../context\";\r\nimport { io } from \"socket.io-client\";\r\nimport { host } from \"../Constants\";\r\nimport { hostSocketIO } from \"../Constants\";\r\nconst socket = io(hostSocketIO);\r\n// const socket = io(\"localhost:3000\");\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\n\r\nconst Room = ({ room }) => {\r\n\tconst toast = useToast();\r\n\tconst url = `http://${hostSocketIO}/company/${room.companySlug}/room/${room.unique_name}`;\r\n\tconst [value, setValue] = useState(room.currentNumber);\r\n\tconst [modalVisible, setModalVisible] = useState(false);\r\n\tconst roomName = room.companySlug + \"_\" + room.unique_name;\r\n\r\n\tconst copyToClipboard = () => {\r\n\t\ttoast.show(\"Copied to clipboard\", {\r\n\t\t\tplacement: \"top\",\r\n\t\t});\r\n\t\tClipboard.setString(url);\r\n\t};\r\n\r\n\tconst addition = () => setValue(value + 1);\r\n\tconst subtraction = () => setValue(value - 1);\r\n\r\n\tconst emitValue = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.unique_name + \"/current\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ number: value }),\r\n\t\t\t});\r\n\r\n\t\t\tsocket.emit(\"emmitToRoom\", { room: roomName, value: value });\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst resetRoom = () => {\r\n\t\talert(room.id);\r\n\t};\r\n\r\n\tuseEffect(emitValue, [value]);\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={styles.roomContainer}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tanimationType=\"slide\"\r\n\t\t\t\t\ttransparent={true}\r\n\t\t\t\t\tvisible={modalVisible}\r\n\t\t\t\t\tonRequestClose={() => {\r\n\t\t\t\t\t\tsetModalVisible(!modalVisible);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={styles.centeredView}>\r\n\t\t\t\t\t\t<View style={styles.modalView}>\r\n\t\t\t\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t\t\t\t<QRCode value={url} size={300} />\r\n\t\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t\t<Pressable onPress={() => setModalVisible(!modalVisible)}>\r\n\t\t\t\t\t\t\t\t<Text style={{ fontSize: 20, color: \"red\" }}>Close</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t<Text style={{ fontSize: 30, marginBottom: 10 }}>{room.name}</Text>\r\n\t\t\t\t\t<TouchableOpacity style={{ marginBottom: 10 }} onPress={copyToClipboard}>\r\n\t\t\t\t\t\t<Text>URL</Text>\r\n\t\t\t\t\t\t<TextInput editable={false} style={styles.input} value={url} />\r\n\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t\t<View style={{ width: \"100%\", alignItems: \"flex-end\" }}>\r\n\t\t\t\t\t\t<Pressable style={styles.sendButton} onPress={() => setModalVisible(true)}>\r\n\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>Show QR</Text>\r\n\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={{ marginBottom: 30 }}>\r\n\t\t\t\t\t<Text style={{ marginBottom: 10 }}>Last generated number </Text>\r\n\t\t\t\t\t<TextInput editable={false} style={styles.input} value={room.lastNumber.toString()} />\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View style={{ width: \"100%\", flexDirection: \"row-reverse\" }}>\r\n\t\t\t\t\t<View style={{ marginLeft: 20 }}>\r\n\t\t\t\t\t\t<Text style={{ marginBottom: 10 }}>Reset Room Numbers</Text>\r\n\t\t\t\t\t\t<View style={{ width: \"100%\", flexDirection: \"row-reverse\" }}>\r\n\t\t\t\t\t\t\t<Pressable style={[styles.sendButton, { backgroundColor: \"red\" }]} onPress={resetRoom}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>Reset</Text>\r\n\t\t\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<View>\r\n\t\t\t\t\t\t<Text>Current Number: </Text>\r\n\t\t\t\t\t\t<View style={{ flexDirection: \"row\", marginTop: 10 }}>\r\n\t\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={subtraction}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>-</Text>\r\n\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t\t<TextInput style={styles.setValueInput} value={value.toString()} editable={false} />\r\n\t\t\t\t\t\t\t<TouchableOpacity style={styles.setValueButton} onPress={addition}>\r\n\t\t\t\t\t\t\t\t<Text style={{ color: \"#fff\" }}>+</Text>\r\n\t\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Emit = () => {\r\n\tconst user = useContext(AppContext);\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/room/user/company/\" + companyId, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ user: user.user }),\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t{rooms.map((room) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<View key={room.id} style={styles.cardContainer}>\r\n\t\t\t\t\t\t<Room room={room} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcenteredView: {\r\n\t\tflex: 1,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginTop: 22,\r\n\t},\r\n\tmodalView: {\r\n\t\tmargin: 20,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderRadius: 20,\r\n\t\tpadding: 35,\r\n\t\talignItems: \"center\",\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2,\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 4,\r\n\t\televation: 5,\r\n\t},\r\n\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tmaxWidth: 480,\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\troomContainer: {\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: \"#CCCCCC\",\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\tsetValueInput: {\r\n\t\twidth: 80,\r\n\t\theight: 40,\r\n\t\tbackgroundColor: \"#F2F2F2\",\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: 14,\r\n\t},\r\n\tsetValueButton: {\r\n\t\tbackgroundColor: \"#43D95D\",\r\n\t\theight: 40,\r\n\t\twidth: 40,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"#41BAEE\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Emit;\r\n"]},"metadata":{},"sourceType":"module"}