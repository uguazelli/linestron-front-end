{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { useEffect, useState } from \"react\";\nimport { host } from \"../../Constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Companies = function Companies() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCompany = _useState2[0],\n      setSelectedCompany = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      companies = _useState4[0],\n      setCompanies = _useState4[1];\n\n  var url = host + \"/company/byemail\";\n  var headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n\n  var getCompanies = function getCompanies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getCompanies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"GET\",\n              credentials: \"include\",\n              headers: headers\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setCompanies(json);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error, somenthing happened\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getCompanies();\n    var currentCompany = companies.find(function (c) {\n      return c.slug === \"zelli\";\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.cardContainer,\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10,\n          width: \"20%\"\n        },\n        children: \"Select a company\"\n      }), _jsx(Picker, {\n        style: styles.input,\n        selectedValue: selectedCompany,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedCompany(itemValue);\n        },\n        children: companies.map(function (item) {\n          return _jsx(Picker.Item, {\n            label: item.name,\n            value: item.slug\n          }, item.id);\n        })\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10,\n          width: \"20%\"\n        },\n        children: \"Company Name\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: currentCompany.name\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          margin: 10,\n          width: \"20%\"\n        },\n        children: \"Slug\"\n      }), _jsx(TextInput, {\n        style: styles.input\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Save\"\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Companies;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Companies.js"],"names":["Picker","useEffect","useState","host","Companies","selectedCompany","setSelectedCompany","companies","setCompanies","url","headers","Accept","getCompanies","fetch","method","credentials","response","json","console","log","currentCompany","find","c","slug","styles","cardContainer","flexDirection","marginBottom","margin","width","input","itemValue","itemIndex","map","item","name","id","alignItems","sendButton","color","StyleSheet","create","maxWidth","backgroundColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth","justifyContent"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, TextInput, TouchableOpacity } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { host } from \"../../Constants\";\r\n\r\nconst Companies = () => {\r\n\tconst [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\tconst [companies, setCompanies] = useState([]);\r\n\r\n\tconst url = host + \"/company/byemail\";\r\n\tconst headers = { Accept: \"application/json\", \"Content-Type\": \"application/json\" };\r\n\tconst getCompanies = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method: \"GET\", credentials: \"include\", headers: headers });\r\n\t\t\tconst json = await response.json();\r\n\t\t\tsetCompanies(json);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error, somenthing happened\");\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCompanies();\r\n\t\tconst currentCompany = companies.find((c) => c.slug === \"zelli\");\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<View style={styles.cardContainer}>\r\n\t\t\t<View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Select a company</Text>\r\n\t\t\t\t<Picker\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tselectedValue={selectedCompany}\r\n\t\t\t\t\tonValueChange={(itemValue, itemIndex) => setSelectedCompany(itemValue)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{companies.map((item) => (\r\n\t\t\t\t\t\t<Picker.Item key={item.id} label={item.name} value={item.slug} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Picker>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Company Name</Text>\r\n\t\t\t\t<TextInput style={styles.input} value={currentCompany.name}></TextInput>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ flexDirection: \"row\", marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ margin: 10, width: \"20%\" }}>Slug</Text>\r\n\t\t\t\t<TextInput style={styles.input}></TextInput>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ alignItems: \"center\" }}>\r\n\t\t\t\t<TouchableOpacity style={styles.sendButton}>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Save</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\nexport default Companies;\r\n"]},"metadata":{},"sourceType":"module"}