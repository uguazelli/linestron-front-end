{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { host } from \"../../Constants\";\nimport { AppContext } from \"../../context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar User = function User(_ref) {\n  var u = _ref.u,\n      users = _ref.users,\n      setUsers = _ref.setUsers;\n\n  var _useState = useState(u),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(user.role == \"admin\" ? true : false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAdmin = _useState4[0],\n      setIsAdmin = _useState4[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    var r = isAdmin ? \"user\" : \"admin\";\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      role: r\n    }));\n    setIsAdmin(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var updateUser = function updateUser() {\n    var response;\n    return _regeneratorRuntime.async(function updateUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/user\", {\n              method: \"PUT\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }));\n\n          case 3:\n            response = _context.sent;\n            alert(\"done\");\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var deleteUser = function deleteUser() {\n    var companyId, response, result;\n    return _regeneratorRuntime.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/user\", {\n              method: \"DELETE\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: user.id,\n                company_id: companyId\n              })\n            }));\n\n          case 6:\n            response = _context2.sent;\n            setUsers(users.filter(function (element) {\n              return element.id !== u.id;\n            }));\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            result = _context2.sent;\n            console.log(result);\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: {\n      marginBottom: 10\n    },\n    children: [_jsxs(View, {\n      style: {\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          marginBottom: 10\n        },\n        children: \"User email\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: user.email,\n        onChangeText: function onChangeText(v) {\n          return setUser(_objectSpread(_objectSpread({}, user), {}, {\n            email: v\n          }));\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginBottom: 10\n      },\n      children: [_jsx(Text, {\n        style: {\n          marginBottom: 10\n        },\n        children: \"Is User Admin?\"\n      }), _jsx(Switch, {\n        trackColor: {\n          false: \"#767577\",\n          true: \"#81b0ff\"\n        },\n        thumbColor: isAdmin ? \"#f5dd4b\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: toggleSwitch,\n        value: isAdmin\n      })]\n    }), _jsxs(View, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"flex-end\",\n        flexDirection: \"row\",\n        marginRight: 30\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.sendButton, {\n          marginRight: 5,\n          backgroundColor: \"#41BAEE\"\n        }],\n        onPress: updateUser,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Save\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.sendButton, {\n          marginRight: 5,\n          backgroundColor: \"#AB433F\"\n        }],\n        onPress: deleteUser,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Delete\"\n        })\n      })]\n    })]\n  });\n};\n\nvar Users = function Users() {\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var getUsers = function getUsers() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getUsers$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/user/company/\" + companyId, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 6:\n            response = _context3.sent;\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var addNewUser = function addNewUser() {\n    var newUser = {\n      id: 0,\n      email: \"\",\n      role: \"user\"\n    };\n    if (users.find(function (u) {\n      return u.id == 0;\n    }) === undefined) setUsers(function (users) {\n      return [].concat(_toConsumableArray(users), [newUser]);\n    });\n  };\n\n  useEffect(function _callee() {\n    var u;\n    return _regeneratorRuntime.async(function _callee$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(getUsers());\n\n          case 2:\n            u = _context4.sent;\n            setUsers(u);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsxs(View, {\n    style: styles.cardContainer,\n    children: [users.map(function (u) {\n      return _jsx(User, {\n        u: u,\n        users: users,\n        setUsers: setUsers\n      }, u.id);\n    }), _jsx(View, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        marginTop: 30\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: addNewUser,\n        style: {\n          backgroundColor: \"#43D95D\",\n          borderRadius: 50,\n          height: 40,\n          width: 40,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"+\"\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 480,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  input: {\n    width: \"100%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#CCCCCC\",\n    paddingLeft: 10\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Users;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Users.js"],"names":["useContext","useEffect","useState","host","AppContext","AsyncStorage","User","u","users","setUsers","user","setUser","role","isAdmin","setIsAdmin","toggleSwitch","r","previousState","updateUser","fetch","method","headers","Accept","body","JSON","stringify","response","alert","console","log","deleteUser","getItem","companyId","id","company_id","filter","element","json","result","marginBottom","styles","input","email","v","false","true","width","justifyContent","flexDirection","marginRight","sendButton","backgroundColor","color","Users","getUsers","addNewUser","newUser","find","undefined","cardContainer","map","marginTop","borderRadius","height","alignItems","StyleSheet","create","maxWidth","padding","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","paddingLeft"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, TextInput, TouchableOpacity, Switch } from \"react-native\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { host } from \"../../Constants\";\r\nimport { AppContext } from \"../../context\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst User = ({ u, users, setUsers }) => {\r\n\tconst [user, setUser] = useState(u);\r\n\tconst [isAdmin, setIsAdmin] = useState(user.role == \"admin\" ? true : false);\r\n\tconst toggleSwitch = () => {\r\n\t\tconst r = isAdmin ? \"user\" : \"admin\"; //set the oposite of current\r\n\t\tsetUser({ ...user, role: r });\r\n\t\tsetIsAdmin((previousState) => !previousState);\r\n\t};\r\n\r\n\tconst updateUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/user\", {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify(user),\r\n\t\t\t});\r\n\t\t\t// const newUserArray = users.filter((element) => element.id !== user.id);\r\n\t\t\t// const result = await response.json();\r\n\t\t\t// const newUser = { id: result.lastInsertRowid, email: user.email, role: user.role };\r\n\t\t\t// setUser(() => [...newUserArray, newUser]);\r\n\t\t\talert(\"done\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst deleteUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/user\", {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ id: user.id, company_id: companyId }),\r\n\t\t\t});\r\n\t\t\tsetUsers(users.filter((element) => element.id !== u.id));\r\n\t\t\tconst result = await response.json();\r\n\t\t\tconsole.log(result);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ marginBottom: 10 }}>User email</Text>\r\n\t\t\t\t<TextInput style={styles.input} value={user.email} onChangeText={(v) => setUser({ ...user, email: v })} />\r\n\t\t\t</View>\r\n\t\t\t<View style={{ marginBottom: 10 }}>\r\n\t\t\t\t<Text style={{ marginBottom: 10 }}>Is User Admin?</Text>\r\n\t\t\t\t{/* <TextInput style={styles.input} value={user.role} onChangeText={(v) => setUser({ ...user, role: v })} /> */}\r\n\r\n\t\t\t\t<Switch\r\n\t\t\t\t\ttrackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n\t\t\t\t\tthumbColor={isAdmin ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n\t\t\t\t\tios_backgroundColor=\"#3e3e3e\"\r\n\t\t\t\t\tonValueChange={toggleSwitch}\r\n\t\t\t\t\tvalue={isAdmin}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ width: \"100%\", justifyContent: \"flex-end\", flexDirection: \"row\", marginRight: 30 }}>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={[styles.sendButton, { marginRight: 5, backgroundColor: \"#41BAEE\" }]}\r\n\t\t\t\t\tonPress={updateUser}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Save</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={[styles.sendButton, { marginRight: 5, backgroundColor: \"#AB433F\" }]}\r\n\t\t\t\t\tonPress={deleteUser}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Delete</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Users = () => {\r\n\tconst [users, setUsers] = useState([]);\r\n\tconst getUsers = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/user/company/\" + companyId, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst addNewUser = () => {\r\n\t\tconst newUser = { id: 0, email: \"\", role: \"user\" };\r\n\t\tif (users.find((u) => u.id == 0) === undefined) setUsers((users) => [...users, newUser]);\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tlet u = await getUsers();\r\n\t\tsetUsers(u);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<View style={styles.cardContainer}>\r\n\t\t\t{users.map((u) => {\r\n\t\t\t\treturn <User key={u.id} u={u} users={users} setUsers={setUsers} />;\r\n\t\t\t})}\r\n\t\t\t<View style={{ width: \"100%\", justifyContent: \"center\", flexDirection: \"row\", marginTop: 30 }}>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tonPress={addNewUser}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: \"#43D95D\",\r\n\t\t\t\t\t\tborderRadius: 50,\r\n\t\t\t\t\t\theight: 40,\r\n\t\t\t\t\t\twidth: 40,\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>+</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 480,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tborderColor: \"#CCCCCC\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}