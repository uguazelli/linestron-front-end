{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthLogin = function AuthLogin(_ref) {\n  var setAuthenticated = _ref.setAuthenticated;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCredentials = _useState2[0],\n      setUserCredential = _useState2[1];\n\n  var login = function login() {\n    var response, json, message;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/auth/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(userCredentials)\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (!json.ok) {\n              message = \"An error has occured: \" + json.status;\n              alert(message);\n            } else {\n              setAuthenticated(true);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Email \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          email: v\n        }));\n      }\n    }), _jsx(Text, {\n      children: \"Password \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          password: v\n        }));\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: login,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    maxWidth: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  sendButton: {\n    backgroundColor: \"green\",\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default AuthLogin;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AuthLogin.js"],"names":["useState","AuthLogin","setAuthenticated","email","password","userCredentials","setUserCredential","login","fetch","method","headers","Accept","body","JSON","stringify","response","json","ok","message","status","alert","styles","container","input","v","sendButton","color","StyleSheet","create","maxWidth","alignItems","justifyContent","height","margin","borderWidth","padding","backgroundColor","width"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0B;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAC3C,kBAA6CF,QAAQ,CAAC;AAAEG,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAArD;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,iBAAxB;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUC,KAAK,CAAC,kCAAD,EAAqC;AAChEC,cAAAA,MAAM,EAAE,MADwD;AAEhEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,MAAM,EAAE,kBAAV;AAA8B,gCAAgB;AAA9C,eAFuD;AAGhEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,eAAf;AAH0D,aAArC,CADf;;AAAA;AACPU,YAAAA,QADO;AAAA;AAAA,6CAMMA,QAAQ,CAACC,IAAT,EANN;;AAAA;AAMPA,YAAAA,IANO;;AAOb,gBAAI,CAACA,IAAI,CAACC,EAAV,EAAc;AACPC,cAAAA,OADO,8BAC4BF,IAAI,CAACG,MADjC;AAEbC,cAAAA,KAAK,CAACF,OAAD,CAAL;AACA,aAHD,MAGO;AACNhB,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AAZY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAeA,SACC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA,eACC,KAAC,IAAD;AAAA;AAAA,MADD,EAEC,KAAC,SAAD;AAAW,MAAA,KAAK,EAAED,MAAM,CAACE,KAAzB;AAAgC,MAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,eAAOlB,iBAAiB,iCAAMD,eAAN;AAAuBF,UAAAA,KAAK,EAAEqB;AAA9B,WAAxB;AAAA;AAA9C,MAFD,EAGC,KAAC,IAAD;AAAA;AAAA,MAHD,EAIC,KAAC,SAAD;AAAW,MAAA,KAAK,EAAEH,MAAM,CAACE,KAAzB;AAAgC,MAAA,YAAY,EAAE,sBAACC,CAAD;AAAA,eAAOlB,iBAAiB,iCAAMD,eAAN;AAAuBD,UAAAA,QAAQ,EAAEoB;AAAjC,WAAxB;AAAA;AAA9C,MAJD,EAKC,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEH,MAAM,CAACI,UAAhC;AAA4C,MAAA,OAAO,EAAElB,KAArD;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEmB,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MALD;AAAA,IADD;AAWA,CA5BD;;AA8BA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAChCN,EAAAA,SAAS,EAAE;AACVO,IAAAA,QAAQ,EAAE,MADA;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,cAAc,EAAE;AAHN,GADqB;AAMhCR,EAAAA,KAAK,EAAE;AACNS,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,WAAW,EAAE,CAHP;AAINC,IAAAA,OAAO,EAAE;AAJH,GANyB;AAYhCV,EAAAA,UAAU,EAAE;AACXW,IAAAA,eAAe,EAAE,OADN;AAEXJ,IAAAA,MAAM,EAAE,EAFG;AAGXK,IAAAA,KAAK,EAAE,EAHI;AAIXP,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,cAAc,EAAE;AALL;AAZoB,CAAlB,CAAf;AAqBA,eAAe9B,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from \"react-native\";\r\n\r\nconst AuthLogin = ({ setAuthenticated }) => {\r\n\tconst [userCredentials, setUserCredential] = useState({ email: \"\", password: \"\" });\r\n\tconst login = async () => {\r\n\t\tconst response = await fetch(\"http://localhost:3000/auth/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(userCredentials),\r\n\t\t});\r\n\t\tconst json = await response.json();\r\n\t\tif (!json.ok) {\r\n\t\t\tconst message = `An error has occured: ${json.status}`;\r\n\t\t\talert(message);\r\n\t\t} else {\r\n\t\t\tsetAuthenticated(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text>Email </Text>\r\n\t\t\t<TextInput style={styles.input} onChangeText={(v) => setUserCredential({ ...userCredentials, email: v })} />\r\n\t\t\t<Text>Password </Text>\r\n\t\t\t<TextInput style={styles.input} onChangeText={(v) => setUserCredential({ ...userCredentials, password: v })} />\r\n\t\t\t<TouchableOpacity style={styles.sendButton} onPress={login}>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmargin: 12,\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"green\",\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default AuthLogin;\r\n"]},"metadata":{},"sourceType":"module"}