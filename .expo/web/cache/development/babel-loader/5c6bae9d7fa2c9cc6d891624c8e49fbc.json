{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { io } from \"socket.io-client\";\nimport { host } from \"../Constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socket = io(\"localhost:3000\");\n\nvar Room = function Room(_ref) {\n  var room = _ref.room;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var emitValue = function emitValue() {\n    return socket.emit(\"emmitToRoom\", {\n      room: room,\n      value: value\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.roomContainer,\n    children: [_jsx(Text, {\n      style: {\n        margin: 10,\n        width: \"30%\"\n      },\n      children: room.name\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: value,\n      onChangeText: setValue\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: emitValue,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    })]\n  });\n};\n\nvar Emit = function Emit() {\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var getRooms = function getRooms() {\n    var response;\n    return _regeneratorRuntime.async(function getRooms$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/user/company\", {\n              method: \"GET\",\n              credentials: \"include\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context2.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: _jsx(View, {\n      style: styles.cardContainer,\n      children: rooms.map(function (room) {\n        return _jsx(Room, {\n          room: room\n        }, room.id);\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  roomContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  input: {\n    width: \"40%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Emit;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Emit.js"],"names":["useEffect","useState","io","host","socket","Room","room","value","setValue","emitValue","emit","styles","roomContainer","margin","width","name","input","sendButton","color","Emit","rooms","setRooms","getRooms","fetch","method","credentials","headers","Accept","response","json","console","log","r","alignItems","cardContainer","map","id","StyleSheet","create","maxWidth","backgroundColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","flexDirection","justifyContent","marginBottom","borderWidth"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport { io } from \"socket.io-client\";\r\nimport { host } from \"../Constants\";\r\nconst socket = io(\"localhost:3000\");\r\n\r\nconst Room = ({ room }) => {\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst emitValue = () => socket.emit(\"emmitToRoom\", { room: room, value: value });\r\n\r\n\treturn (\r\n\t\t<View style={styles.roomContainer}>\r\n\t\t\t<Text style={{ margin: 10, width: \"30%\" }}>{room.name}</Text>\r\n\t\t\t<TextInput style={styles.input} value={value} onChangeText={setValue} />\r\n\t\t\t<TouchableOpacity style={styles.sendButton} onPress={emitValue}>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Emit = () => {\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/user/company\", {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\tcredentials: \"include\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t<View style={styles.cardContainer}>\r\n\t\t\t\t{rooms.map((room) => {\r\n\t\t\t\t\treturn <Room key={room.id} room={room} />;\r\n\t\t\t\t})}\r\n\t\t\t</View>\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\troomContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"40%\",\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Emit;\r\n"]},"metadata":{},"sourceType":"module"}