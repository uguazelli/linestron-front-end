{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Linking from \"expo-linking\";\nimport { AppContext } from \"../context\";\nimport { io } from \"socket.io-client\";\nimport { host } from \"../Constants\";\nimport { hostSocketIO } from \"../Constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socket = io(hostSocketIO);\n\nvar Room = function Room(_ref) {\n  var room = _ref.room;\n\n  var _useState = useState(room.currentNumber),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var roomName = room.companySlug + \"_\" + room.unique_name;\n\n  var emitValue = function emitValue() {\n    var response;\n    return _regeneratorRuntime.async(function emitValue$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/\" + room.unique_name + \"/current\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                number: value\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            socket.emit(\"emmitToRoom\", {\n              room: roomName,\n              value: value\n            });\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: styles.roomContainer,\n      children: [_jsx(Text, {\n        style: {\n          margin: 10,\n          width: \"30%\",\n          fontSize: 30\n        },\n        children: room.name\n      }), _jsxs(View, {\n        style: {\n          marginBottom: 20,\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Text, {\n          children: \"URL: \"\n        }), _jsx(TouchableHighlight, {\n          children: _jsx(Text, {\n            children: hostSocketIO + \"/company/\" + room.companySlug + \"/room/\" + room.unique_name\n          })\n        })]\n      }), _jsxs(Text, {\n        children: [\"Total numbers \", room.lastNumber]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          children: \"Current Number: \"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: value,\n          onChangeText: setValue\n        }), _jsx(TouchableOpacity, {\n          style: styles.sendButton,\n          onPress: emitValue,\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Send\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar Emit = function Emit() {\n  var user = useContext(AppContext);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var getRooms = function getRooms() {\n    var companyId, response;\n    return _regeneratorRuntime.async(function getRooms$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"companyId\"));\n\n          case 3:\n            companyId = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(host + \"/room/user/company/\" + companyId, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                user: user.user\n              })\n            }));\n\n          case 6:\n            response = _context2.sent;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  useEffect(function _callee() {\n    var r;\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getRooms());\n\n          case 2:\n            r = _context3.sent;\n            setRooms(r);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      alignItems: \"center\"\n    },\n    children: rooms.map(function (room) {\n      return _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsx(Room, {\n          room: room\n        }, room.id)\n      });\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardContainer: {\n    width: \"95%\",\n    maxWidth: 640,\n    backgroundColor: \"white\",\n    padding: 30,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    borderRadius: 10\n  },\n  roomContainer: {\n    justifyContent: \"space-between\",\n    marginBottom: 10\n  },\n  input: {\n    width: 80,\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginRight: 30\n  },\n  sendButton: {\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Emit;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/Emit.js"],"names":["useContext","useEffect","useState","AsyncStorage","Linking","AppContext","io","host","hostSocketIO","socket","Room","room","currentNumber","value","setValue","roomName","companySlug","unique_name","emitValue","fetch","method","headers","Accept","body","JSON","stringify","number","response","emit","json","console","log","styles","roomContainer","margin","width","fontSize","name","marginBottom","flexDirection","lastNumber","justifyContent","alignItems","input","sendButton","color","Emit","user","rooms","setRooms","getRooms","getItem","companyId","r","map","cardContainer","id","StyleSheet","create","maxWidth","backgroundColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderRadius","borderWidth","marginRight"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { ScrollView, StyleSheet, Text, TextInput, TouchableHighlight, TouchableOpacity, View } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Linking from \"expo-linking\";\r\nimport { AppContext } from \"../context\";\r\nimport { io } from \"socket.io-client\";\r\nimport { host } from \"../Constants\";\r\nimport { hostSocketIO } from \"../Constants\";\r\nconst socket = io(hostSocketIO);\r\n// const socket = io(\"localhost:3000\");\r\n\r\nconst Room = ({ room }) => {\r\n\tconst [value, setValue] = useState(room.currentNumber);\r\n\tconst roomName = room.companySlug + \"_\" + room.unique_name;\r\n\tconst emitValue = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(host + \"/room/\" + room.unique_name + \"/current\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ number: value }),\r\n\t\t\t});\r\n\r\n\t\t\tsocket.emit(\"emmitToRoom\", { room: roomName, value: value });\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<View style={styles.roomContainer}>\r\n\t\t\t\t<Text style={{ margin: 10, width: \"30%\", fontSize: 30 }}>{room.name}</Text>\r\n\t\t\t\t<View style={{ marginBottom: 20, flexDirection: \"row\" }}>\r\n\t\t\t\t\t<Text>URL: </Text>\r\n\t\t\t\t\t<TouchableHighlight>\r\n\t\t\t\t\t\t<Text>{`${hostSocketIO}/company/${room.companySlug}/room/${room.unique_name}`}</Text>\r\n\t\t\t\t\t</TouchableHighlight>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<Text>Total numbers {room.lastNumber}</Text>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\r\n\t\t\t\t\t<Text>Current Number: </Text>\r\n\t\t\t\t\t<TextInput style={styles.input} value={value} onChangeText={setValue} />\r\n\t\t\t\t\t<TouchableOpacity style={styles.sendButton} onPress={emitValue}>\r\n\t\t\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Emit = () => {\r\n\tconst user = useContext(AppContext);\r\n\tconst [rooms, setRooms] = useState([]);\r\n\tconst getRooms = async () => {\r\n\t\ttry {\r\n\t\t\tconst companyId = await AsyncStorage.getItem(\"companyId\");\r\n\t\t\tconst response = await fetch(host + \"/room/user/company/\" + companyId, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\r\n\t\t\t\tbody: JSON.stringify({ user: user.user }),\r\n\t\t\t});\r\n\t\t\treturn await response.json();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst r = await getRooms();\r\n\t\tsetRooms(r);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n\t\t\t{rooms.map((room) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<View style={styles.cardContainer}>\r\n\t\t\t\t\t\t<Room key={room.id} room={room} />\r\n\t\t\t\t\t</View>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcardContainer: {\r\n\t\twidth: \"95%\",\r\n\t\tmaxWidth: 640,\r\n\t\tbackgroundColor: \"white\",\r\n\t\tpadding: 30,\r\n\t\tmargin: 10,\r\n\t\tshadowColor: \"#000\",\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 5,\r\n\t\t},\r\n\t\tshadowOpacity: 0.34,\r\n\t\tshadowRadius: 6.27,\r\n\t\televation: 10,\r\n\t\tborderRadius: 10,\r\n\t},\r\n\troomContainer: {\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tinput: {\r\n\t\twidth: 80,\r\n\t\theight: 40,\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 5,\r\n\t\tmarginRight: 30,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"black\",\r\n\t\tborderRadius: 5,\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Emit;\r\n"]},"metadata":{},"sourceType":"module"}