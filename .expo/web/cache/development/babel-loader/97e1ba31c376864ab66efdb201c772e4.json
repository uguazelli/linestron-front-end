{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthLogin = function AuthLogin(_ref) {\n  var navigation = _ref.navigation;\n\n  var login = function login() {\n    var _useState, _useState2, userCredentials, setUserCredential, response, json, message;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _useState = useState({\n              email: \"guazelli.ugo@gmail.com\",\n              password: \"Gu4z3lli\"\n            }), _useState2 = _slicedToArray(_useState, 2), userCredentials = _useState2[0], setUserCredential = _useState2[1];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/auth/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: userCredentials.email,\n                password: userCredentials.password\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n\n            if (json.ok) {\n              _context.next = 12;\n              break;\n            }\n\n            message = \"An error has occured: \" + json.status;\n            throw new Error(message);\n\n          case 12:\n            console.log(json);\n            navigation.navigate(\"/admin\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.roomContainer,\n    children: [_jsx(Text, {\n      children: \"Room Number \"\n    }), _jsx(TextInput, {\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    maxWidth: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  roomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  sendButton: {\n    backgroundColor: \"green\",\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default AuthLogin;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AuthLogin.js"],"names":["AuthLogin","navigation","login","useState","email","password","userCredentials","setUserCredential","fetch","method","headers","Accept","body","JSON","stringify","response","json","ok","message","status","Error","console","log","navigate","styles","roomContainer","input","sendButton","color","StyleSheet","create","container","maxWidth","alignItems","justifyContent","flexDirection","height","margin","borderWidth","padding","backgroundColor","width"],"mappings":";;;;;;;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACrC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgCC,QAAQ,CAAC;AAAEC,cAAAA,KAAK,EAAE,wBAAT;AAAmCC,cAAAA,QAAQ,EAAE;AAA7C,aAAD,CADxC,6CACNC,eADM,kBACWC,iBADX;AAAA;AAAA,6CAGUC,KAAK,CAAC,kCAAD,EAAqC;AAChEC,cAAAA,MAAM,EAAE,MADwD;AAEhEC,cAAAA,OAAO,EAAE;AACRC,gBAAAA,MAAM,EAAE,kBADA;AAER,gCAAgB;AAFR,eAFuD;AAMhEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,gBAAAA,KAAK,EAAEE,eAAe,CAACF,KAAzB;AAAgCC,gBAAAA,QAAQ,EAAEC,eAAe,CAACD;AAA1D,eAAf;AAN0D,aAArC,CAHf;;AAAA;AAGPU,YAAAA,QAHO;AAAA;AAAA,6CAWMA,QAAQ,CAACC,IAAT,EAXN;;AAAA;AAWPA,YAAAA,IAXO;;AAAA,gBAYRA,IAAI,CAACC,EAZG;AAAA;AAAA;AAAA;;AAaNC,YAAAA,OAbM,8BAa6BF,IAAI,CAACG,MAblC;AAAA,kBAcN,IAAIC,KAAJ,CAAUF,OAAV,CAdM;;AAAA;AAgBZG,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAf,YAAAA,UAAU,CAACsB,QAAX,CAAoB,QAApB;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAqBA,SACC,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA,eACC,KAAC,IAAD;AAAA;AAAA,MADD,EAEC,KAAC,SAAD;AAAW,MAAA,KAAK,EAAED,MAAM,CAACE;AAAzB,MAFD,EAGC,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEF,MAAM,CAACG,UAAhC;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MAHD;AAAA,IADD;AASA,CA/BD;;AAiCA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,QAAQ,EAAE,MADA;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,cAAc,EAAE;AAHN,GADqB;AAMhCT,EAAAA,aAAa,EAAE;AACdU,IAAAA,aAAa,EAAE,KADD;AAEdF,IAAAA,UAAU,EAAE,QAFE;AAGdC,IAAAA,cAAc,EAAE;AAHF,GANiB;AAWhCR,EAAAA,KAAK,EAAE;AACNU,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,WAAW,EAAE,CAHP;AAINC,IAAAA,OAAO,EAAE;AAJH,GAXyB;AAiBhCZ,EAAAA,UAAU,EAAE;AACXa,IAAAA,eAAe,EAAE,OADN;AAEXJ,IAAAA,MAAM,EAAE,EAFG;AAGXK,IAAAA,KAAK,EAAE,EAHI;AAIXR,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,cAAc,EAAE;AALL;AAjBoB,CAAlB,CAAf;AA0BA,eAAelC,SAAf","sourcesContent":["import { StyleSheet, Text, View, TextInput, TouchableOpacity } from \"react-native\";\r\nconst AuthLogin = ({ navigation }) => {\r\n\tconst login = async () => {\r\n\t\tconst [userCredentials, setUserCredential] = useState({ email: \"guazelli.ugo@gmail.com\", password: \"Gu4z3lli\" });\r\n\r\n\t\tconst response = await fetch(\"http://localhost:3000/auth/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ email: userCredentials.email, password: userCredentials.password }),\r\n\t\t});\r\n\t\tconst json = await response.json();\r\n\t\tif (!json.ok) {\r\n\t\t\tconst message = `An error has occured: ${json.status}`;\r\n\t\t\tthrow new Error(message);\r\n\t\t} else {\r\n\t\t\tconsole.log(json);\r\n\t\t\tnavigation.navigate(\"/admin\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.roomContainer}>\r\n\t\t\t<Text>Room Number </Text>\r\n\t\t\t<TextInput style={styles.input} />\r\n\t\t\t<TouchableOpacity style={styles.sendButton}>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\troomContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmargin: 12,\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"green\",\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default AuthLogin;\r\n"]},"metadata":{},"sourceType":"module"}