{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { io } from \"socket.io-client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socket = io(\"localhost:3000\");\n\nvar Room = function Room(_ref) {\n  var roomNumber = _ref.roomNumber;\n  console.log(roomNumber);\n\n  var emitValue = function emitValue(number) {\n    socket.emit(\"emmitToRoom\", {\n      roomNumber: roomNumber,\n      value: \"abc\"\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Number\"\n    }), _jsx(TextInput, {\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: emitValue,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    })]\n  });\n};\n\nvar Rooms = function Rooms() {\n  var _useState = useState([{\n    room: 1,\n    value: 0\n  }, {\n    room: 2,\n    value: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomNumber = _useState2[0],\n      setRoomNumber = _useState2[1];\n\n  var emitValue = function emitValue(number) {\n    socket.emit(\"emmitToRoom\", {\n      room: 4,\n      value: \"number\"\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Room, {\n      roomNumber: 1\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    maxWidth: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  sendButton: {\n    backgroundColor: \"green\",\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default Rooms;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/Rooms.js"],"names":["useState","io","socket","Room","roomNumber","console","log","emitValue","number","emit","value","styles","input","sendButton","color","Rooms","room","setRoomNumber","container","StyleSheet","create","flexDirection","maxWidth","alignItems","justifyContent","height","margin","borderWidth","padding","backgroundColor","width"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;AACA,IAAMC,MAAM,GAAGD,EAAE,CAAC,gBAAD,CAAjB;;AAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAC7BN,IAAAA,MAAM,CAACO,IAAP,CAAY,aAAZ,EAA2B;AAAEL,MAAAA,UAAU,EAAEA,UAAd;AAA0BM,MAAAA,KAAK,EAAE;AAAjC,KAA3B;AACA,GAFD;;AAGA,SACC,MAAC,IAAD;AAAA,eACC,KAAC,IAAD;AAAA;AAAA,MADD,EAEC,KAAC,SAAD;AAAW,MAAA,KAAK,EAAEC,MAAM,CAACC;AAAzB,MAFD,EAGC,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAED,MAAM,CAACE,UAAhC;AAA4C,MAAA,OAAO,EAAEN,SAArD;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AADD,MAHD;AAAA,IADD;AASA,CAdD;;AAgBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnB,kBAAoCf,QAAQ,CAAC,CAC5C;AAAEgB,IAAAA,IAAI,EAAE,CAAR;AAAWN,IAAAA,KAAK,EAAE;AAAlB,GAD4C,EAE5C;AAAEM,IAAAA,IAAI,EAAE,CAAR;AAAWN,IAAAA,KAAK,EAAE;AAAlB,GAF4C,CAAD,CAA5C;AAAA;AAAA,MAAON,UAAP;AAAA,MAAmBa,aAAnB;;AAIA,MAAMV,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAY;AAC7BN,IAAAA,MAAM,CAACO,IAAP,CAAY,aAAZ,EAA2B;AAAEO,MAAAA,IAAI,EAAE,CAAR;AAAWN,MAAAA,KAAK,EAAE;AAAlB,KAA3B;AACA,GAFD;;AAIA,SACC,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACO,SAApB;AAAA,cACC,KAAC,IAAD;AAAM,MAAA,UAAU,EAAE;AAAlB;AADD,IADD;AAKA,CAdD;;AAgBA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,SAAS,EAAE;AACVG,IAAAA,aAAa,EAAE,KADL;AAEVC,IAAAA,QAAQ,EAAE,MAFA;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN,GADqB;AAOhCZ,EAAAA,KAAK,EAAE;AACNa,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,WAAW,EAAE,CAHP;AAINC,IAAAA,OAAO,EAAE;AAJH,GAPyB;AAahCf,EAAAA,UAAU,EAAE;AACXgB,IAAAA,eAAe,EAAE,OADN;AAEXJ,IAAAA,MAAM,EAAE,EAFG;AAGXK,IAAAA,KAAK,EAAE,EAHI;AAIXP,IAAAA,UAAU,EAAE,QAJD;AAKXC,IAAAA,cAAc,EAAE;AALL;AAboB,CAAlB,CAAf;AAsBA,eAAeT,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport { io } from \"socket.io-client\";\r\nconst socket = io(\"localhost:3000\");\r\n\r\nconst Room = ({ roomNumber }) => {\r\n\tconsole.log(roomNumber);\r\n\tconst emitValue = (number) => {\r\n\t\tsocket.emit(\"emmitToRoom\", { roomNumber: roomNumber, value: \"abc\" });\r\n\t};\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Text>Number</Text>\r\n\t\t\t<TextInput style={styles.input} />\r\n\t\t\t<TouchableOpacity style={styles.sendButton} onPress={emitValue}>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst Rooms = () => {\r\n\tconst [roomNumber, setRoomNumber] = useState([\r\n\t\t{ room: 1, value: 0 },\r\n\t\t{ room: 2, value: 0 },\r\n\t]);\r\n\tconst emitValue = (number) => {\r\n\t\tsocket.emit(\"emmitToRoom\", { room: 4, value: \"number\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Room roomNumber={1} />\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tmaxWidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmargin: 12,\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 10,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"green\",\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default Rooms;\r\n"]},"metadata":{},"sourceType":"module"}