{"ast":null,"code":"import Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Settings from \"./Settings\";\nimport Emit from \"./Emit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function NavigationTab() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n            if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/settings\") iconName = \"settings-outline\";\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"green\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"/\",\n        component: Emit,\n        options: {\n          title: \"Emit\"\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"/settings\",\n        component: Settings,\n        options: {\n          headerTitle: function headerTitle(props) {\n            return \"Settings\";\n          },\n          headerRight: function headerRight() {\n            return _jsx(Button, {\n              onPress: function onPress() {\n                return alert(\"This is a button!\");\n              },\n              title: \"Info\",\n              color: \"#00cc00\"\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/NavigationTab.js"],"names":["NavigationContainer","createBottomTabNavigator","Ionicons","Settings","Emit","Tab","NavigationTab","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","headerTitle","props","headerRight","alert","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;AAEA,eAAe,SAASK,aAAT,GAAyB;AACvC,SACC,KAAC,mBAAD;AAAA,cACC,MAAC,GAAD,CAAK,SAAL;AACC,MAAA,aAAa,EAAE;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB;AAC9BC,UAAAA,UAAU,EAAE,2BAA8B;AAAA,gBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,gBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;AACzC,gBAAIC,QAAJ;AACA,gBAAIL,KAAK,CAACM,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIL,KAAK,CAACM,IAAN,KAAe,WAAnB,EAAgCD,QAAQ,GAAG,kBAAX;AAErC,mBAAO,KAAC,QAAD;AAAU,cAAA,IAAI,EAAEA,QAAhB;AAA0B,cAAA,IAAI,EAAED,IAAhC;AAAsC,cAAA,KAAK,EAAED;AAA7C,cAAP;AACA,WAP6B;AAQ9BI,UAAAA,qBAAqB,EAAE,OARO;AAS9BC,UAAAA,uBAAuB,EAAE;AATK,SAAhB;AAAA,OADhB;AAAA,iBAcC,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,GAAjB;AAAqB,QAAA,SAAS,EAAEX,IAAhC;AAAsC,QAAA,OAAO,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT;AAA/C,QAdD,EAeC,KAAC,GAAD,CAAK,MAAL;AACC,QAAA,IAAI,EAAC,WADN;AAEC,QAAA,SAAS,EAAEb,QAFZ;AAGC,QAAA,OAAO,EAAE;AACRc,UAAAA,WAAW,EAAE,qBAACC,KAAD;AAAA,mBAAW,UAAX;AAAA,WADL;AAERC,UAAAA,WAAW,EAAE;AAAA,mBAAM,KAAC,MAAD;AAAQ,cAAA,OAAO,EAAE;AAAA,uBAAMC,KAAK,CAAC,mBAAD,CAAX;AAAA,eAAjB;AAAmD,cAAA,KAAK,EAAC,MAAzD;AAAgE,cAAA,KAAK,EAAC;AAAtE,cAAN;AAAA;AAFL;AAHV,QAfD;AAAA;AADD,IADD;AA6BA;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import { Button, StyleSheet } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport Settings from \"./Settings\";\r\nimport Emit from \"./Emit\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function NavigationTab() {\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Tab.Navigator\r\n\t\t\t\tscreenOptions={({ route }) => ({\r\n\t\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\r\n\t\t\t\t\t\tlet iconName;\r\n\t\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\r\n\t\t\t\t\t\telse if (route.name === \"/settings\") iconName = \"settings-outline\";\r\n\t\t\t\t\t\t// You can return any component that you like here!\r\n\t\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttabBarActiveTintColor: \"green\",\r\n\t\t\t\t\ttabBarInactiveTintColor: \"gray\",\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{/* <Tab.Screen name=\"/\" component={AdminRooms} options={{ title: \"AdminRooms\" }} /> */}\r\n\t\t\t\t<Tab.Screen name=\"/\" component={Emit} options={{ title: \"Emit\" }} />\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname=\"/settings\"\r\n\t\t\t\t\tcomponent={Settings}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\theaderTitle: (props) => \"Settings\",\r\n\t\t\t\t\t\theaderRight: () => <Button onPress={() => alert(\"This is a button!\")} title=\"Info\" color=\"#00cc00\" />,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <Tab.Screen name=\"/login\" component={AuthLogin} /> */}\r\n\t\t\t</Tab.Navigator>\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}