{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AuthLogin = function AuthLogin(_ref) {\n  var navigation = _ref.navigation;\n\n  var login = function login() {\n    var _useState, _useState2, userCredentials, setUserCredential, response, json, message;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _useState = useState({\n              email: \"guazelli.ugo@gmail.com\",\n              password: \"Gu4z3lli\"\n            }), _useState2 = _slicedToArray(_useState, 2), userCredentials = _useState2[0], setUserCredential = _useState2[1];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/auth/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: userCredentials.email,\n                password: userCredentials.password\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n\n            if (json.ok) {\n              _context.next = 12;\n              break;\n            }\n\n            message = \"An error has occured: \" + json.status;\n            throw new Error(message);\n\n          case 12:\n            console.log(json);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Text, {\n    children: \"Login\"\n  });\n};\n\nexport default AuthLogin;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AuthLogin.js"],"names":["AuthLogin","navigation","login","useState","email","password","userCredentials","setUserCredential","fetch","method","headers","Accept","body","JSON","stringify","response","json","ok","message","status","Error","console","log"],"mappings":";;;;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACrC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgCC,QAAQ,CAAC;AAAEC,cAAAA,KAAK,EAAE,wBAAT;AAAmCC,cAAAA,QAAQ,EAAE;AAA7C,aAAD,CADxC,6CACNC,eADM,kBACWC,iBADX;AAAA;AAAA,6CAGUC,KAAK,CAAC,kCAAD,EAAqC;AAChEC,cAAAA,MAAM,EAAE,MADwD;AAEhEC,cAAAA,OAAO,EAAE;AACRC,gBAAAA,MAAM,EAAE,kBADA;AAER,gCAAgB;AAFR,eAFuD;AAMhEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,gBAAAA,KAAK,EAAEE,eAAe,CAACF,KAAzB;AAAgCC,gBAAAA,QAAQ,EAAEC,eAAe,CAACD;AAA1D,eAAf;AAN0D,aAArC,CAHf;;AAAA;AAGPU,YAAAA,QAHO;AAAA;AAAA,6CAWMA,QAAQ,CAACC,IAAT,EAXN;;AAAA;AAWPA,YAAAA,IAXO;;AAAA,gBAYRA,IAAI,CAACC,EAZG;AAAA;AAAA;AAAA;;AAaNC,YAAAA,OAbM,8BAa6BF,IAAI,CAACG,MAblC;AAAA,kBAcN,IAAIC,KAAJ,CAAUF,OAAV,CAdM;;AAAA;AAgBZG,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AAhBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAqBA,SAAO,KAAC,IAAD;AAAA;AAAA,IAAP;AACA,CAvBD;;AAyBA,eAAehB,SAAf","sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nconst AuthLogin = ({ navigation }) => {\r\n\tconst login = async () => {\r\n\t\tconst [userCredentials, setUserCredential] = useState({ email: \"guazelli.ugo@gmail.com\", password: \"Gu4z3lli\" });\r\n\r\n\t\tconst response = await fetch(\"http://localhost:3000/auth/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ email: userCredentials.email, password: userCredentials.password }),\r\n\t\t});\r\n\t\tconst json = await response.json();\r\n\t\tif (!json.ok) {\r\n\t\t\tconst message = `An error has occured: ${json.status}`;\r\n\t\t\tthrow new Error(message);\r\n\t\t} else {\r\n\t\t\tconsole.log(json);\r\n\t\t\t//navigation.navigate(\"/admin\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn <Text>Login</Text>;\r\n};\r\n\r\nexport default AuthLogin;\r\n"]},"metadata":{},"sourceType":"module"}