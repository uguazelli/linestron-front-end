{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Settings from \"./Settings\";\nimport Emit from \"./Emit\";\nimport Admin from \"./admin/Admin\";\nimport Company from \"./admin/Company\";\nimport Rooms from \"./admin/Rooms\";\nimport Users from \"./admin/Users\";\nimport LogoutPage from \"./authentication/LogoutPage\";\nimport { useState } from \"react\";\nimport { AUTH } from \"../Constants\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport LoginPage from \"./authentication/LoginPage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          if (route.name === \"/\") iconName = \"notifications-outline\";else if (route.name === \"/admin\") iconName = \"settings-outline\";\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"green\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"/\",\n      component: Emit,\n      options: {\n        title: \"Emit\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"/admin\",\n      component: Admin,\n      options: {\n        title: \"Admin\"\n      }\n    })]\n  });\n}\n\nexport default function NavigationTab() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(onAuthStateChanged(AUTH, function (user) {\n    if (user) setUser(user);else setUser(false);\n  }), []);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: user !== false ? _jsx(Stack.Screen, {\n        name: \"/login\",\n        component: LoginPage,\n        options: {\n          title: \"Login\"\n        }\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"/settings\",\n          component: Settings,\n          options: {\n            title: \"Company Select\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"/home\",\n          component: Home,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"/company\",\n          component: Company,\n          options: {\n            title: \"Company\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"/rooms\",\n          component: Rooms,\n          options: {\n            title: \"Rooms\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"/users\",\n          component: Users,\n          options: {\n            title: \"Users\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"/logout\",\n          component: LogoutPage,\n          options: {\n            title: \"Logout\"\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/NavigationTab.js"],"names":["NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Ionicons","Settings","Emit","Admin","Company","Rooms","Users","LogoutPage","useState","AUTH","signInWithEmailAndPassword","LoginPage","Tab","Stack","Home","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","title","NavigationTab","user","setUser","useEffect","onAuthStateChanged","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AACA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,GAAG,GAAGd,wBAAwB,EAApC;AACA,IAAMe,KAAK,GAAGd,0BAA0B,EAAxC;;AAEA,SAASe,IAAT,GAAgB;AACf,SACC,MAAC,GAAD,CAAK,SAAL;AACC,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC9BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACzC,cAAIC,QAAJ;AACA,cAAIL,KAAK,CAACM,IAAN,KAAe,GAAnB,EAAwBD,QAAQ,GAAG,uBAAX,CAAxB,KACK,IAAIL,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6BD,QAAQ,GAAG,kBAAX;AAElC,iBAAO,KAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACA,SAP6B;AAQ9BI,QAAAA,qBAAqB,EAAE,OARO;AAS9BC,QAAAA,uBAAuB,EAAE;AATK,OAAhB;AAAA,KADhB;AAAA,eAaC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,GAAjB;AAAqB,MAAA,SAAS,EAAErB,IAAhC;AAAsC,MAAA,OAAO,EAAE;AAAEsB,QAAAA,KAAK,EAAE;AAAT;AAA/C,MAbD,EAcC,KAAC,GAAD,CAAK,MAAL;AAAY,MAAA,IAAI,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAErB,KAArC;AAA4C,MAAA,OAAO,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAT;AAArD,MAdD;AAAA,IADD;AAkBA;;AAED,eAAe,SAASC,aAAT,GAAyB;AACvC,kBAAwBjB,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACAC,EAAAA,SAAS,CACRC,kBAAkB,CAACpB,IAAD,EAAO,UAACiB,IAAD,EAAU;AAClC,QAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP,CAAV,KACKC,OAAO,CAAC,KAAD,CAAP;AACL,GAHiB,CADV,EAKR,EALQ,CAAT;AAQA,SACC,KAAC,mBAAD;AAAA,cACC,KAAC,KAAD,CAAO,SAAP;AAAA,gBACED,IAAI,KAAK,KAAT,GACA,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAEf,SAAvC;AAAkD,QAAA,OAAO,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT;AAA3D,QADA,GAGA;AAAA,mBACC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAEvB,QAA1C;AAAoD,UAAA,OAAO,EAAE;AAAEuB,YAAAA,KAAK,EAAE;AAAT;AAA7D,UADD,EAEC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAEV,IAAtC;AAA4C,UAAA,OAAO,EAAE;AAAEgB,YAAAA,WAAW,EAAE;AAAf;AAArD,UAFD,EAGC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAE1B,OAAzC;AAAkD,UAAA,OAAO,EAAE;AAAEoB,YAAAA,KAAK,EAAE;AAAT;AAA3D,UAHD,EAIC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,SAAS,EAAEnB,KAAvC;AAA8C,UAAA,OAAO,EAAE;AAAEmB,YAAAA,KAAK,EAAE;AAAT;AAAvD,UAJD,EAKC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,SAAS,EAAElB,KAAvC;AAA8C,UAAA,OAAO,EAAE;AAAEkB,YAAAA,KAAK,EAAE;AAAT;AAAvD,UALD,EAMC,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAEjB,UAAxC;AAAoD,UAAA,OAAO,EAAE;AAAEiB,YAAAA,KAAK,EAAE;AAAT;AAA7D,UAND;AAAA;AAJF;AADD,IADD;AAkBA;AAED,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAChCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import { StyleSheet } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport Settings from \"./Settings\";\r\nimport Emit from \"./Emit\";\r\nimport Admin from \"./admin/Admin\";\r\nimport Company from \"./admin/Company\";\r\nimport Rooms from \"./admin/Rooms\";\r\nimport Users from \"./admin/Users\";\r\nimport LogoutPage from \"./authentication/LogoutPage\";\r\n\r\nimport { useState } from \"react\";\r\nimport { AUTH } from \"../Constants\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport LoginPage from \"./authentication/LoginPage\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<Tab.Navigator\r\n\t\t\tscreenOptions={({ route }) => ({\r\n\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\r\n\t\t\t\t\tlet iconName;\r\n\t\t\t\t\tif (route.name === \"/\") iconName = \"notifications-outline\";\r\n\t\t\t\t\telse if (route.name === \"/admin\") iconName = \"settings-outline\";\r\n\t\t\t\t\t// You can return any component that you like here!\r\n\t\t\t\t\treturn <Ionicons name={iconName} size={size} color={color} />;\r\n\t\t\t\t},\r\n\t\t\t\ttabBarActiveTintColor: \"green\",\r\n\t\t\t\ttabBarInactiveTintColor: \"gray\",\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<Tab.Screen name=\"/\" component={Emit} options={{ title: \"Emit\" }} />\r\n\t\t\t<Tab.Screen name=\"/admin\" component={Admin} options={{ title: \"Admin\" }} />\r\n\t\t</Tab.Navigator>\r\n\t);\r\n}\r\n\r\nexport default function NavigationTab() {\r\n\tconst [user, setUser] = useState(null);\r\n\tuseEffect(\r\n\t\tonAuthStateChanged(AUTH, (user) => {\r\n\t\t\tif (user) setUser(user);\r\n\t\t\telse setUser(false);\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Stack.Navigator>\r\n\t\t\t\t{user !== false ? (\r\n\t\t\t\t\t<Stack.Screen name=\"/login\" component={LoginPage} options={{ title: \"Login\" }} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Stack.Screen name=\"/settings\" component={Settings} options={{ title: \"Company Select\" }} />\r\n\t\t\t\t\t\t<Stack.Screen name=\"/home\" component={Home} options={{ headerShown: false }} />\r\n\t\t\t\t\t\t<Stack.Screen name=\"/company\" component={Company} options={{ title: \"Company\" }} />\r\n\t\t\t\t\t\t<Stack.Screen name=\"/rooms\" component={Rooms} options={{ title: \"Rooms\" }} />\r\n\t\t\t\t\t\t<Stack.Screen name=\"/users\" component={Users} options={{ title: \"Users\" }} />\r\n\t\t\t\t\t\t<Stack.Screen name=\"/logout\" component={LogoutPage} options={{ title: \"Logout\" }} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Stack.Navigator>\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}