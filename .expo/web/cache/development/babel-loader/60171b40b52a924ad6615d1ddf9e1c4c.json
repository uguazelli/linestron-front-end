{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthLogin = function AuthLogin(_ref) {\n  var setAuthenticated = _ref.setAuthenticated;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCredentials = _useState2[0],\n      setUserCredential = _useState2[1];\n\n  var url = \"http://localhost:3000/auth/login\";\n  var headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  var body = JSON.stringify(userCredentials);\n\n  var login = function login() {\n    var response;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"POST\",\n              credentials: \"include\",\n              headers: headers,\n              body: body\n            }));\n\n          case 3:\n            response = _context.sent;\n            setAuthenticated({\n              ok: true\n            });\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            Alert.alert(JSON.stringify(_context.t0));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        margin: 40,\n        color: \"white\"\n      },\n      children: \"Login Page\"\n    }), _jsx(Text, {\n      style: {\n        color: \"white\"\n      },\n      children: \"Email \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          email: v\n        }));\n      }\n    }), _jsx(Text, {\n      style: {\n        color: \"white\"\n      },\n      children: \"Password \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(v) {\n        return setUserCredential(_objectSpread(_objectSpread({}, userCredentials), {}, {\n          password: v\n        }));\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.sendButton,\n      onPress: login,\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Send\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    maxWidth: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#2D2D44\",\n    padding: 100\n  },\n  input: {\n    height: 40,\n    width: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderColor: \"white\",\n    color: \"white\"\n  },\n  sendButton: {\n    backgroundColor: \"green\",\n    height: 40,\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default AuthLogin;","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/components/admin/AuthLogin.js"],"names":["useState","AuthLogin","setAuthenticated","email","password","userCredentials","setUserCredential","url","headers","Accept","body","JSON","stringify","login","fetch","method","credentials","response","ok","console","log","Alert","alert","styles","container","fontSize","margin","color","input","v","sendButton","StyleSheet","create","maxWidth","alignItems","justifyContent","backgroundColor","padding","height","width","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Alert } from \"react-native\";\r\n\r\nconst AuthLogin = ({ setAuthenticated }) => {\r\n\tconst [userCredentials, setUserCredential] = useState({ email: \"\", password: \"\" });\r\n\r\n\tconst url = \"http://localhost:3000/auth/login\";\r\n\tconst headers = { Accept: \"application/json\", \"Content-Type\": \"application/json\" };\r\n\tconst body = JSON.stringify(userCredentials);\r\n\tconst login = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method: \"POST\", credentials: \"include\", headers: headers, body: body });\r\n\t\t\tsetAuthenticated({ ok: true });\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tAlert.alert(JSON.stringify(error));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text style={{ fontSize: 20, margin: 40, color: \"white\" }}>Login Page</Text>\r\n\t\t\t<Text style={{ color: \"white\" }}>Email </Text>\r\n\t\t\t<TextInput style={styles.input} onChangeText={(v) => setUserCredential({ ...userCredentials, email: v })} />\r\n\t\t\t<Text style={{ color: \"white\" }}>Password </Text>\r\n\t\t\t<TextInput style={styles.input} onChangeText={(v) => setUserCredential({ ...userCredentials, password: v })} />\r\n\t\t\t<TouchableOpacity style={styles.sendButton} onPress={login}>\r\n\t\t\t\t<Text style={{ color: \"white\" }}>Send</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tmaxWidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackgroundColor: \"#2D2D44\",\r\n\t\tpadding: 100,\r\n\t},\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\twidth: 200,\r\n\t\tmargin: 12,\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 10,\r\n\t\tborderColor: \"white\",\r\n\t\tcolor: \"white\",\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: \"green\",\r\n\t\theight: 40,\r\n\t\twidth: 80,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n});\r\n\r\nexport default AuthLogin;\r\n"]},"metadata":{},"sourceType":"module"}