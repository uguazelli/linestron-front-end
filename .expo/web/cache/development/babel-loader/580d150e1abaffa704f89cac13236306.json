{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar login = function login() {\n  return _regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          fetch(\"http://localhost:3000/auth/loggeduser\").then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            return console.log(data);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { login };","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/Utils.js"],"names":["login","fetch","then","response","json","data","console","log"],"mappings":";;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAMbC,UAAAA,KAAK,CAAC,uCAAD,CAAL,CACEC,IADF,CACO,UAACC,QAAD;AAAA,mBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,WADP,EAEEF,IAFF,CAEO,UAACG,IAAD;AAAA,mBAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,WAFP;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAYA,SAASL,KAAT","sourcesContent":["const login = async () => {\r\n\t// const response = await fetch(\"http://localhost:3000/auth/loggeduser\");\r\n\t// const json = await response.json();\r\n\t// if (!json.ok) alert(`An error has occured: ${json.status}`);\r\n\t// else alert(\"nothing\");\r\n\r\n\tfetch(\"http://localhost:3000/auth/loggeduser\")\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) => console.log(data));\r\n\t//return await json.ok;\r\n};\r\n\r\nexport { login };\r\n"]},"metadata":{},"sourceType":"module"}