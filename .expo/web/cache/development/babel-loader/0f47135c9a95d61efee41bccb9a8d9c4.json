{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AUTH } from \"./Constants\";\nimport { signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { AppContext } from \"./context\";\nimport NavigationTab from \"./components/NavigationTab\";\nimport LoginPage from \"./components/authentication/LoginPage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(onAuthStateChanged(AUTH, function (user) {\n    if (user) setUser(user);else setUser(false);\n  }), []);\n  return _jsx(AppContext.Provider, {\n    value: {\n      user: user\n    },\n    children: user ? _jsx(NavigationTab, {}) : _jsx(LoginPage, {\n      setUser: setUser\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/ez99032/Documents/Apps/linestron/linestron-front-end/App.js"],"names":["useEffect","useState","AUTH","signInWithEmailAndPassword","onAuthStateChanged","signOut","AppContext","NavigationTab","LoginPage","App","user","setUser"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;AAEA,SAASC,IAAT;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,OAAzD,QAAwE,eAAxE;AACA,SAASC,UAAT;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;;AAiDA,eAAe,SAASC,GAAT,GAAe;AAC7B,kBAAwBR,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACAX,EAAAA,SAAS,CACRI,kBAAkB,CAACF,IAAD,EAAO,UAACQ,IAAD,EAAU;AAClC,QAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP,CAAV,KACKC,OAAO,CAAC,KAAD,CAAP;AACL,GAHiB,CADV,EAKR,EALQ,CAAT;AAUA,SACC,KAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAA5B;AAAA,cACEA,IAAI,GAAG,KAAC,aAAD,KAAH,GAAuB,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEC;AAApB;AAD7B,IADD;AAKA","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { View, Text, TextInput, Button } from \"react-native\";\r\nimport { AUTH } from \"./Constants\";\r\nimport { signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { AppContext } from \"./context\";\r\nimport NavigationTab from \"./components/NavigationTab\";\r\nimport LoginPage from \"./components/authentication/LoginPage\";\r\n\r\n// const LoginPage = ({ setUser }) => {\r\n// \tconst [email, setEmail] = useState(\"\");\r\n// \tconst [pass, setPass] = useState(\"\");\r\n\r\n// \tconst logIn = () => {\r\n// \t\tsignInWithEmailAndPassword(AUTH, email, pass)\r\n// \t\t\t.then((userCredential) => {\r\n// \t\t\t\tconst user = userCredential.user;\r\n// \t\t\t\tsetUser(user);\r\n// \t\t\t})\r\n// \t\t\t.catch((error) => {\r\n// \t\t\t\tconst errorCode = error.code;\r\n// \t\t\t\tconst errorMessage = error.message;\r\n// \t\t\t\tconsole.log(errorMessage);\r\n// \t\t\t});\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<View>\r\n// \t\t\t<Text>email</Text>\r\n// \t\t\t<TextInput style={{ borderStyle: \"solid\", borderBottomWidth: 1 }} onChangeText={setEmail}></TextInput>\r\n// \t\t\t<Text>password</Text>\r\n// \t\t\t<TextInput style={{ borderStyle: \"solid\", borderBottomWidth: 1 }} onChangeText={setPass}></TextInput>\r\n// \t\t\t<Button title=\"Send\" onPress={logIn} />\r\n// \t\t</View>\r\n// \t);\r\n// };\r\n\r\n// const Welcome = () => {\r\n// \tconst logout = () => {\r\n// \t\tsignOut(AUTH)\r\n// \t\t\t.then(() => {\r\n// \t\t\t\tconsole.log(\"signed out\");\r\n// \t\t\t\tsetUser(false);\r\n// \t\t\t})\r\n// \t\t\t.catch((error) => {\r\n// \t\t\t\tconsole.log(\"failed signout\");\r\n// \t\t\t});\r\n// \t};\r\n// \treturn (\r\n// \t\t<View>\r\n// \t\t\t<Text>welcome</Text>\r\n// \t\t\t<Button title=\"logout\" onPress={logout} />\r\n// \t\t</View>\r\n// \t);\r\n// };\r\n\r\nexport default function App() {\r\n\tconst [user, setUser] = useState(null);\r\n\tuseEffect(\r\n\t\tonAuthStateChanged(AUTH, (user) => {\r\n\t\t\tif (user) setUser(user);\r\n\t\t\telse setUser(false);\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\t// return <>{authenticated.ok === true ? <NavigationTab /> : <LoginPage setAuthenticated={setAuthenticated} />}</>;\r\n\t// return <NavigationTab />\r\n\treturn (\r\n\t\t<AppContext.Provider value={{ user }}>\r\n\t\t\t{user ? <NavigationTab /> : <LoginPage setUser={setUser} />}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}